cscope 15 /data/work/own/projects/minix_proj/src/kernel               0000305697
	@clock.c

33 
	~"kî√l.h
"

34 
	~"¥oc.h
"

35 
	~<sig«l.h
>

36 
	~<möix/com.h
>

40 
FORWARD
 
_PROTOTYPE
–
öô_˛ock
, () );

41 
FORWARD
 
_PROTOTYPE
–
˛ock_h™dÀr
, (
úq_hook_t
 *
hook
) );

42 
FORWARD
 
_PROTOTYPE
–
do_˛ocktick
, (
mesßge
 *
m_±r
) );

43 
FORWARD
 
_PROTOTYPE
–
lﬂd_upd©e
, ());

52 
PRIVATE
 
timî_t
 *
	g˛ock_timîs
;

53 
PRIVATE
 
˛ock_t
 
	g√xt_timeout
;

57 
PRIVATE
 
˛ock_t
 
	gªÆtime
 = 0;

58 
PRIVATE
 
úq_hook_t
 
	g˛ock_hook
;

63 
PUBLIC
 
	$˛ock_èsk
()

67 
mesßge
 
m
;

68 
ªsu…
;

70 
	`öô_˛ock
();

73 
TRUE
) {

75 
ªsu…
 = 
	`ª˚ive
(
ANY
, &
m
);

77 if(
ªsu…
 !
OK
)

78 
	`möix_∑nic
("ª˚ive(ËÁûed", 
ªsu…
);

81 
m
.
m_ty≥
) {

82 
HARD_INT
:

83 
	`do_˛ocktick
(&
m
);

86 
	`k¥ötf
("CLOCK: illegalÑequest %d from %d.\n",

87 
m
.
m_ty≥
, m.
m_sour˚
);

90 
	}
}

95 
PRIVATE
 
	$do_˛ocktick
(
m_±r
)

96 
mesßge
 *
m_±r
;

108 i‡(
¥ev_±r
->
p_ticks_À·
 <0 && 
	`¥iv
’ªv_±r)->
s_Êags
 & 
PREEMPTIBLE
) {

109 if(
¥ev_±r
->
p_πs_Êags
 == 0) {

110 
	`lock_dequeue
(
¥ev_±r
);

111 
	`lock_íqueue
(
¥ev_±r
);

113 
	`k¥ötf
("CLOCK: %dÇotÑunnable; flags: %x\n",

114 
¥ev_±r
->
p_ídpoöt
,Öªv_±r->
p_πs_Êags
);

119 i‡(
√xt_timeout
 <
ªÆtime
) {

120 
	`tmrs_ex±imîs
(&
˛ock_timîs
, 
ªÆtime
, 
NULL
);

121 
√xt_timeout
 = (
˛ock_timîs
 =
NULL
) ?

122 
TMR_NEVER
 : 
˛ock_timîs
->
tmr_exp_time
;

126 
	}
}

131 
PRIVATE
 
	$öô_˛ock
()

140 
	`¨ch_öô_˛ock
();

143 
˛ock_hook
.
¥oc_ƒ_e
 = 
CLOCK
;

145 
	`put_úq_h™dÀr
(&
˛ock_hook
, 
CLOCK_IRQ
, 
˛ock_h™dÀr
);

146 
	`íabÀ_úq
(&
˛ock_hook
);

149 
	`bÆ™˚_queues
(
NULL
);

150 
	}
}

155 
PRIVATE
 
	$˛ock_h™dÀr
(
hook
)

156 
úq_hook_t
 *
hook
;

182 
ticks
;

184 if(
möix_∑nicög
) ;

187 
ticks
 = 
lo°_ticks
 + 1;

188 
lo°_ticks
 = 0;

189 
ªÆtime
 +
ticks
;

197 
¥oc_±r
->
p_u£r_time
 +
ticks
;

198 i‡(
	`¥iv
(
¥oc_±r
)->
s_Êags
 & 
PREEMPTIBLE
) {

199 
¥oc_±r
->
p_ticks_À·
 -
ticks
;

201 i‡(! (
	`¥iv
(
¥oc_±r
)->
s_Êags
 & 
BILLABLE
)) {

202 
bûl_±r
->
p_sys_time
 +
ticks
;

203 
bûl_±r
->
p_ticks_À·
 -
ticks
;

208 
	`lﬂd_upd©e
();

214 i‡((
√xt_timeout
 <
ªÆtime
Ë|| (
¥oc_±r
->
p_ticks_À·
 <= 0)) {

215 
¥ev_±r
 = 
¥oc_±r
;

216 
	`lock_nŸify
(
HARDWARE
, 
CLOCK
);

219 i‡(
do_£rül_debug
)

220 
	`do_£r_debug
();

223 
	}
}

228 
PUBLIC
 
˛ock_t
 
	$gë_u±ime
()

231 (
ªÆtime
);

232 
	}
}

237 
PUBLIC
 
	$£t_timî
(
ç
, 
exp_time
, 
w©chdog
)

238 
timî
 *
ç
;

239 
˛ock_t
 
exp_time
;

240 
tmr_func_t
 
w©chdog
;

245 
	`tmrs_£âimî
(&
˛ock_timîs
, 
ç
, 
exp_time
, 
w©chdog
, 
NULL
);

246 
√xt_timeout
 = 
˛ock_timîs
->
tmr_exp_time
;

247 
	}
}

252 
PUBLIC
 
	$ª£t_timî
(
ç
)

253 
timî
 *
ç
;

259 
	`tmrs_˛πimî
(&
˛ock_timîs
, 
ç
, 
NULL
);

260 
√xt_timeout
 = (
˛ock_timîs
 =
NULL
) ?

261 
TMR_NEVER
 : 
˛ock_timîs
->
tmr_exp_time
;

262 
	}
}

267 
PRIVATE
 
	$lﬂd_upd©e
()

269 
u16_t
 
¶Ÿ
;

270 
íqueued
 = -1, 
q
;

271 
¥oc
 *
p
;

279 
¶Ÿ
 = (
ªÆtime
 / 
HZ
 / 
_LOAD_UNIT_SECS
Ë% 
_LOAD_HISTORY
;

280 if(
¶Ÿ
 !
klﬂdöfo
.
¥oc_œ°_¶Ÿ
) {

281 
klﬂdöfo
.
¥oc_lﬂd_hi°‹y
[
¶Ÿ
] = 0;

282 
klﬂdöfo
.
¥oc_œ°_¶Ÿ
 = 
¶Ÿ
;

286 
q
 = 0; q < 
NR_SCHED_QUEUES
; q++)

287 
p
 = 
rdy_hód
[
q
];Ö !
NIL_PROC
;Ö =Ö->
p_√xåódy
)

288 
íqueued
++;

290 
klﬂdöfo
.
¥oc_lﬂd_hi°‹y
[
¶Ÿ
] +
íqueued
;

293 
klﬂdöfo
.
œ°_˛ock
 = 
ªÆtime
;

294 
	}
}

	@config.h

1 #i‚de‡
CONFIG_H


2 
	#CONFIG_H


	)

18 
	#USE_FORK
 1

	)

19 
	#USE_NEWMAP
 1

	)

20 
	#USE_EXEC
 1

	)

21 
	#USE_EXIT
 1

	)

22 
	#USE_TRACE
 1

	)

23 
	#USE_GETKSIG
 1

	)

24 
	#USE_ENDKSIG
 1

	)

25 
	#USE_KILL
 1

	)

26 
	#USE_SIGSEND
 1

	)

27 
	#USE_SIGRETURN
 1

	)

28 
	#USE_ABORT
 1

	)

29 
	#USE_GETINFO
 1

	)

30 
	#USE_TIMES
 1

	)

31 
	#USE_SETALARM
 1

	)

32 
	#USE_DEVIO
 1

	)

33 
	#USE_VDEVIO
 1

	)

34 
	#USE_SDEVIO
 1

	)

35 
	#USE_IRQCTL
 1

	)

36 
	#USE_SEGCTL
 1

	)

37 
	#USE_PRIVCTL
 1

	)

38 
	#USE_NICE
 1

	)

39 
	#USE_UMAP
 1

	)

40 
	#USE_VIRCOPY
 1

	)

41 
	#USE_VIRVCOPY
 1

	)

42 
	#USE_PHYSCOPY
 1

	)

43 
	#USE_PHYSVCOPY
 1

	)

44 
	#USE_MEMSET
 1

	)

50 
	#P_NAME_LEN
 8

	)

55 
	#RANDOM_ELEMENTS
 32

	)

62 
	#NR_IRQ_HOOKS
 16

	)

63 
	#VDEVIO_BUF_SIZE
 64

	)

64 
	#VCOPY_VEC_SIZE
 16

	)

67 
	#K_STACK_BYTES
 1024

	)

69 
	#K_PARAM_SIZE
 512

	)

	@const.h

2 #i‚de‡
CONST_H


3 
	#CONST_H


	)

5 
	~<möix/c⁄fig.h
>

6 
	~<möix/bôm≠.h
>

8 
	~"c⁄fig.h
"

9 
	~"debug.h
"

12 
	#s_ƒ_to_id
(
n
Ë(
NR_TASKS
 + (nË+ 1)

	)

17 
	#°ru˘of
(
ty≥
, 
fõld
, 
±r
) \

18 ((
ty≥
 *Ë(((*Ë(
±r
)Ë- 
	`off£tof
—y≥, 
fõld
)))

	)

21 
	#isokíd±
(
e
,
p
Ë
	`isokíd±_d
(”),’),0)

	)

22 
	#okíd±
(
e
,
p
Ë
	`isokíd±_d
(”),’),1)

	)

25 
	#_SRC_
 0

	)

26 
	#_DST_
 1

	)

29 
	#RANDOM_SOURCES
 16

	)

31 
	#gë_sys_bô
(
m≠
,
bô
) \

32 –
	`MAP_CHUNK
(
m≠
.
chunk
,
bô
Ë& (1 << 
	`CHUNK_OFFSET
(bôË)

	)

33 
	#gë_sys_bôs
(
m≠
,
bô
) \

34 –
	`MAP_CHUNK
(
m≠
.
chunk
,
bô
Ë)

	)

35 
	#£t_sys_bô
(
m≠
,
bô
) \

36 –
	`MAP_CHUNK
(
m≠
.
chunk
,
bô
Ë|(1 << 
	`CHUNK_OFFSET
(bôË)

	)

37 
	#un£t_sys_bô
(
m≠
,
bô
) \

38 –
	`MAP_CHUNK
(
m≠
.
chunk
,
bô
Ë&~(1 << 
	`CHUNK_OFFSET
(bôË)

	)

39 
	#NR_SYS_CHUNKS
 
	`BITMAP_CHUNKS
(
NR_SYS_PROCS
)

	)

41 
	#ªÆlock
 dÿ{ 
d
; d = 
	`öå_dißbÀd
(); 
	`öå_dißbÀ
(); 
lockÀvñ
++; if(d &&ÜockÀvñ =1Ë{ 
	`möix_∑nic
("ªÆlock whûêöãºu±†dißbÀd fú°Åime", 
__LINE__
); } } 0)

	)

43 
	#ªÆu∆ock
 dÿ{ if(!
	`öå_dißbÀd
()Ë{ 
	`möix_∑nic
("ªÆu∆ock whûêöãºu±†íabÀd", 
__LINE__
); } if(
lockÀvñ
 < 1Ë{ möix_∑nic("ªÆu∆ock whûêlockÀvñ bñow 1", __LINE__); }ÜockÀvñ--; if÷ockÀvñ =0Ë{ 
	`öå_íabÀ
(); } } 0)

	)

48 
	#lock
 
ªÆlock


	)

49 
	#u∆ock
 
ªÆu∆ock


	)

52 
	#INTS_ORIG
 0

	)

53 
	#INTS_MINIX
 1

	)

	@debug.c

6 
	~"kî√l.h
"

7 
	~"¥oc.h
"

8 
	~"debug.h
"

10 
	~<möix/sysutû.h
>

11 
	~<limôs.h
>

12 
	~<°rög.h
>

16 
	g°¨âimes
[
TIMING_CATEGORIES
][2];

18 
	#HIGHCOUNT
 0

	)

19 
	#LOWCOUNT
 1

	)

21 
	$timî_°¨t
(
ˇt
, *
«me
)

23 
öô
 = 0;

24 
h
, 
l
;

25 
i
;

27 i‡(
ˇt
 < 0 || c© >
TIMING_CATEGORIES
) ;

29 
i
 = 0; i < (
timögd©a
[0].
«mes
Ë&& *
«me
; i++)

30 
timögd©a
[
ˇt
].
«mes
[
i
] = *
«me
++;

31 
timögd©a
[
ˇt
].
«mes
[(timingdata[0].names)-1] = '\0';

33 i‡(
°¨âimes
[
ˇt
][
HIGHCOUNT
]) { ; }

35 i‡(!
öô
) {

36 
t
, 
f
;

37 
öô
 = 1;

38 
t
 = 0;Å < 
TIMING_CATEGORIES
;Å++) {

39 
timögd©a
[
t
].
lock_timögs_ønge
[0] = 0;

40 
timögd©a
[
t
].
ª£ts
 =Åimögd©a[t].
mis£s
 =

41 
timögd©a
[
t
].
mósuªmíts
 = 0;

45 
	`ªad_tsc
(&
°¨âimes
[
ˇt
][
HIGHCOUNT
], &°¨âimes[ˇt][
LOWCOUNT
]);

46 
	}
}

48 
	$timî_íd
(
ˇt
)

50 
h
, 
l
, 
d
 = 0, 
bösize
;

51 
bö
;

53 
	`ªad_tsc
(&
h
, &
l
);

54 i‡(
ˇt
 < 0 || c© >
TIMING_CATEGORIES
) ;

55 i‡(!
°¨âimes
[
ˇt
][
HIGHCOUNT
]) {

56 
timögd©a
[
ˇt
].
mis£s
++;

59 i‡(
°¨âimes
[
ˇt
][
HIGHCOUNT
] =
h
) {

60 
d
 = (
l
 - 
°¨âimes
[
ˇt
][1]);

61 } i‡(
°¨âimes
[
ˇt
][
HIGHCOUNT
] =
h
-1 &&

62 
°¨âimes
[
ˇt
][
LOWCOUNT
] > 
l
) {

63 
d
 = ((
ULONG_MAX
 - 
°¨âimes
[
ˇt
][
LOWCOUNT
]Ë+ 
l
);

65 
timögd©a
[
ˇt
].
mis£s
++;

68 
°¨âimes
[
ˇt
][
HIGHCOUNT
] = 0;

69 i‡(!
timögd©a
[
ˇt
].
lock_timögs_ønge
[0] ||

70 
d
 < 
timögd©a
[
ˇt
].
lock_timögs_ønge
[0] ||

71 
d
 > 
timögd©a
[
ˇt
].
lock_timögs_ønge
[1]) {

72 
t
;

73 i‡(!
timögd©a
[
ˇt
].
lock_timögs_ønge
[0] ||

74 
d
 < 
timögd©a
[
ˇt
].
lock_timögs_ønge
[0])

75 
timögd©a
[
ˇt
].
lock_timögs_ønge
[0] = 
d
;

76 i‡(!
timögd©a
[
ˇt
].
lock_timögs_ønge
[1] ||

77 
d
 > 
timögd©a
[
ˇt
].
lock_timögs_ønge
[1])

78 
timögd©a
[
ˇt
].
lock_timögs_ønge
[1] = 
d
;

79 
t
 = 0;Å < 
TIMING_POINTS
;Å++)

80 
timögd©a
[
ˇt
].
lock_timögs
[
t
] = 0;

81 
timögd©a
[
ˇt
].
bösize
 =

82 (
timögd©a
[
ˇt
].
lock_timögs_ønge
[1] -

83 
timögd©a
[
ˇt
].
lock_timögs_ønge
[0])/(
TIMING_POINTS
+1);

84 i‡(
timögd©a
[
ˇt
].
bösize
 < 1)

85 
timögd©a
[
ˇt
].
bösize
 = 1;

86 
timögd©a
[
ˇt
].
ª£ts
++;

88 
bö
 = (
d
-
timögd©a
[
ˇt
].
lock_timögs_ønge
[0]) /

89 
timögd©a
[
ˇt
].
bösize
;

90 i‡(
bö
 < 0 || bö >
TIMING_POINTS
) {

91 
t
;

93 
t
 = 0;Å < 
TIMING_POINTS
;Å++)

94 
timögd©a
[
ˇt
].
lock_timögs
[
t
] = 0;

95 
timögd©a
[
ˇt
].
mis£s
++;

97 
timögd©a
[
ˇt
].
lock_timögs
[
bö
]++;

98 
timögd©a
[
ˇt
].
mósuªmíts
++;

102 
	}
}

104 #i‡
DEBUG_SCHED_CHECK


106 
	#MAX_LOOP
 (
NR_PROCS
 + 
NR_TASKS
)

	)

108 
PUBLIC
 

109 
	$check_runqueues_f
(*
fûe
, 
löe
)

111 
q
, 
l
 = 0;

112 
¥oc
 *
xp
;

113 
	#MYPANIC
(
msg
) { \

114 
buf
[100]; \

115 
	`°r˝y
(
buf
, 
fûe
); \

116 
	`°rˇt
(
buf
, ": "); \

117 
	`utû_n°rˇt
(
buf
, 
löe
);\

118 
	`°rˇt
(
buf
, ": "); \

119 
	`°rˇt
(
buf
, 
msg
); \

120 
	`möix_∑nic
(
buf
, 
NO_NUM
); \

121 }

	)

123 
xp
 = 
BEG_PROC_ADDR
; x∞< 
END_PROC_ADDR
; ++xp) {

124 
xp
->
p_found
 = 0;

125 i‡(
l
++ > 
MAX_LOOP
Ë{ 
	`MYPANIC
("checkÉrror"); }

128 
q
=
l
=0; q < 
NR_SCHED_QUEUES
; q++) {

129 i‡(
rdy_hód
[
q
] && !
rdy_èû
[q]) {

130 
	`k¥ötf
("hód buànÿèû i¿%d\n", 
q
);

131 
	`MYPANIC
("schedulingÉrror");

133 i‡(!
rdy_hód
[
q
] && 
rdy_èû
[q]) {

134 
	`k¥ötf
("èû buànÿhód i¿%d\n", 
q
);

135 
	`MYPANIC
("schedulingÉrror");

137 i‡(
rdy_èû
[
q
] &&Ñdy_èû[q]->
p_√xåódy
 !
NIL_PROC
) {

138 
	`k¥ötf
("èûándÅaû->√xànŸÇuŒ i¿%d\n", 
q
);

139 
	`MYPANIC
("schedulingÉrror");

141 
xp
 = 
rdy_hód
[
q
]; x∞!
NIL_PROC
; x∞xp->
p_√xåódy
) {

142 i‡(!
xp
->
p_ªady
) {

143 
	`k¥ötf
("schedulingÉrror: unready onÑunq %dÖroc %d\n",

144 
q
, 
xp
->
p_ƒ
);

145 
	`MYPANIC
("found unreadyÖrocess onÑun queue");

147 i‡(
xp
->
p_¥i‹ôy
 !
q
) {

148 
	`k¥ötf
("schedulingÉrror: wrongÖriority q %dÖroc %d\n",

149 
q
, 
xp
->
p_ƒ
);

150 
	`MYPANIC
("wrongÖriority");

152 i‡(
xp
->
p_found
) {

153 
	`k¥ötf
("schedulingÉrror: double sched q %dÖroc %d\n",

154 
q
, 
xp
->
p_ƒ
);

155 
	`MYPANIC
("proc moreÅhan once on scheduling queue");

157 
xp
->
p_found
 = 1;

158 i‡(
xp
->
p_√xåódy
 =
NIL_PROC
 && 
rdy_èû
[
q
] != xp) {

159 
	`k¥ötf
("schedÉrr:ÜastÉlementÇotÅail q %dÖroc %d\n",

160 
q
, 
xp
->
p_ƒ
);

161 
	`MYPANIC
("schedulingÉrror");

163 i‡(
l
++ > 
MAX_LOOP
Ë
	`MYPANIC
("loop in schedule queue?");

167 
l
 = 0;

168 
xp
 = 
BEG_PROC_ADDR
; x∞< 
END_PROC_ADDR
; ++xp) {

169 i‡(! 
	`i£m±yp
(
xp
Ë&& xp->
p_ªady
 && ! xp->
p_found
) {

170 
	`k¥ötf
("schedÉº‹:ÑódyÖro¯%dÇŸ o¿queue\n", 
xp
->
p_ƒ
);

171 
	`MYPANIC
("readyÖrocÇot on scheduling queue");

172 i‡(
l
++ > 
MAX_LOOP
Ë{ 
	`MYPANIC
("loop in debug.c?"); }

175 
	}
}

	@debug.h

1 #i‚de‡
DEBUG_H


2 
	#DEBUG_H


	)

10 
	~<™si.h
>

11 
	~"c⁄fig.h
"

22 
	#DEBUG_ENABLE_IPC_WARNINGS
 0

	)

23 
	#DEBUG_STACKTRACE
 1

	)

24 
	#DEBUG_VMASSERT
 1

	)

25 
	#DEBUG_SCHED_CHECK
 1

	)

26 
	#DEBUG_TIME_LOCKS
 1

	)

32 
	#TIMING_POINTS
 20

	)

33 
	#TIMING_CATEGORIES
 20

	)

34 
	#TIMING_NAME
 10

	)

	@glo.h

1 #i‚de‡
GLO_H


2 
	#GLO_H


	)

9 #ifde‡
_TABLE


10 #unde‡
EXTERN


11 
	#EXTERN


	)

14 
	~<möix/c⁄fig.h
>

15 
	~<¨chty≥s.h
>

16 
	~"c⁄fig.h
"

19 
EXTERN
 
	gkî√l_ex˚±i⁄
;

20 
EXTERN
 
	gshutdown_°¨ãd
;

23 
EXTERN
 
köfo
 
	gköfo
;

24 
EXTERN
 
machöe
 
	gmachöe
;

25 
EXTERN
 
kmesßges
 
	gkmess
;

26 
EXTERN
 
øndom√ss
 
	gkøndom
;

27 
EXTERN
 
lﬂdöfo
 
	gklﬂdöfo
;

30 
EXTERN
 
¥oc
 *
	g¥ev_±r
;

31 
EXTERN
 
¥oc
 *
	g¥oc_±r
;

32 
EXTERN
 
¥oc
 *
	g√xt_±r
;

33 
EXTERN
 
¥oc
 *
	gbûl_±r
;

34 
EXTERN
 
¥oc
 *
	gvmª°¨t
;

35 
EXTERN
 
¥oc
 *
	gvmªque°
;

36 
EXTERN
 
¥oc
 *
	g∑geÁu…s
;

37 
EXTERN
 
¥oc
 *
	gso·nŸify
;

38 
EXTERN
 
	gk_ªíãr
;

39 
EXTERN
 
	glo°_ticks
;

43 
EXTERN
 
úq_hook_t
 
	gúq_hooks
[
NR_IRQ_HOOKS
];

44 
EXTERN
 
	gúq_a˘ids
[
NR_IRQ_VECTORS
];

45 
EXTERN
 
	gúq_u£
;

47 
EXTERN
 
	sùc_°©s


49 
	mdód¥oc
;

50 
	mbad_ídpoöt
;

51 
	md°_nŸ_Ælowed
;

52 
	mbad_ˇŒ
;

53 
	mˇŒ_nŸ_Ælowed
;

54 
	mbad_buf„r
;

55 
	mdódlock
;

56 
	mnŸ_ªady
;

57 
	m§c_dõd
;

58 
	md°_dõd
;

59 
	mno_¥iv
;

60 
	mbad_size
;

61 
	mbad_£nda
;

62 
u64_t
 
	mtŸÆ
;

63 } 
	gùc_°©s
;

64 
ídpoöt_t
 
ùc_°©s_èrgë
;

66 
EXTERN
 
	ssy°em_°©s


68 
	mbad_ªq
;

69 
	mnŸ_Ælowed
;

70 
u64_t
 
	mtŸÆ
;

71 } 
	gsys_°©s
;

74 
EXTERN
 
ªg_t
 
	gm⁄_ss
, 
	gm⁄_•
;

75 
EXTERN
 
	gm⁄_ªtu∫
;

76 
EXTERN
 
	gdo_£rül_debug
;

77 
EXTERN
 
ídpoöt_t
 
	gwho_e
;

78 
EXTERN
 
	gwho_p
;

79 
EXTERN
 
	gsys_ˇŒ_code
;

80 
EXTERN
 
time_t
 
	gboŸtime
;

81 
EXTERN
 
	g∑øms_buf„r
[512];

82 
EXTERN
 
	gmöix_∑nicög
;

83 
EXTERN
 
	glockÀvñ
;

85 
EXTERN
 
	g¸3swôch
;

86 
EXTERN
 
	g¸3ªlﬂd
;

89 
EXTERN
 
phys_byãs
 
	gvm_ba£
;

90 
EXTERN
 
phys_byãs
 
	gvm_size
;

91 
EXTERN
 
phys_byãs
 
	gvm_mem_high
;

92 
EXTERN
 
	gvm_ru¬ög
;

93 
EXTERN
 
	gmu°_nŸify_vm
;

96 
EXTERN
 
	gvîbo£_vm
;

99 
EXTERN
 
lock_timögd©a
 
	gtimögd©a
[
TIMING_CATEGORIES
];

102 
boŸ_image
 
image
[];

103 *
t_°ack
[];

104 
£gdesc_s
 
gdt
[];

106 
EXTERN
 
_PROTOTYPE
–(*
Àvñ0_func
), () );

	@interrupt.c

16 
	~"kî√l.h
"

17 
	~"¥oc.h
"

18 
	~<möix/com.h
>

19 
	~<¨chc⁄°.h
>

22 
PUBLIC
 
úq_hook_t
* 
	gúq_h™dÀrs
[
NR_IRQ_VECTORS
] = {0};

27 
PUBLIC
 
	$put_úq_h™dÀr
–
úq_hook_t
* 
hook
, 
úq
, 
úq_h™dÀr_t
 
h™dÀr
)

29 
id
;

30 
úq_hook_t
 **
löe
;

32 if–
úq
 < 0 || irq >
NR_IRQ_VECTORS
 )

33 
	`möix_∑nic
("övÆid cÆ»tÿput_úq_h™dÀr", 
úq
);

35 
löe
 = &
úq_h™dÀrs
[
úq
];

36 
id
 = 1;

38  *
löe
 !
NULL
 ) {

39 if(
hook
 =*
löe
) ;

40 
löe
 = &(*löe)->
√xt
;

41 
id
 <<= 1;

44 if(
id
 == 0)

45 
	`möix_∑nic
("Toÿm™y h™dÀr†f‹ irq", 
úq
);

47 
hook
->
√xt
 = 
NULL
;

48 
hook
->
h™dÀr
 = handler;

49 
hook
->
úq
 = irq;

50 
hook
->
id
 = id;

51 *
löe
 = 
hook
;

52 
úq_u£
 |1 << 
úq
;

58 
	`öå_unmask
(
hook
);

59 
	}
}

65 
PUBLIC
 
	$rm_úq_h™dÀr
–
úq_hook_t
* 
hook
 ) {

66 
úq
 = 
hook
->irq;

67 
id
 = 
hook
->id;

68 
úq_hook_t
 **
löe
;

70 if–
úq
 < 0 || irq >
NR_IRQ_VECTORS
 )

71 
	`möix_∑nic
("övÆid cÆ»tÿrm_úq_h™dÀr", 
úq
);

74 
	`öå_mask
(
hook
);

77 
löe
 = &
úq_h™dÀrs
[
úq
];

79  (*
löe
Ë!
NULL
 ) {

80 if((*
löe
)->
id
 == id) {

81 (*
löe
Ë(*löe)->
√xt
;

82 if(!
úq_h™dÀrs
[
úq
])

83 
úq_u£
 &~(1 << 
úq
);

86 
löe
 = &(*löe)->
√xt
;

89 
	}
}

94 
PUBLIC
 
	$öå_h™dÀ
(
úq_hook_t
 *
hook
)

102  
hook
 !
NULL
 ) {

106 
úq_a˘ids
[
hook
->
úq
] |hook->
id
;

109 if–(*
hook
->
h™dÀr
)(hook) )

110 
úq_a˘ids
[
hook
->
úq
] &~hook->
id
;

113 
hook
 = hook->
√xt
;

119 
	}
}

122 
PUBLIC
 
	$íabÀ_úq
(
hook
)

123 
úq_hook_t
* 
hook
;

125 if((
úq_a˘ids
[
hook
->
úq
] &~hook->
id
) == 0) {

126 
	`öå_unmask
(
hook
);

129 
	}
}

132 
PUBLIC
 
	$dißbÀ_úq
(
hook
)

133 
úq_hook_t
* 
hook
;

135 if(
úq_a˘ids
[
hook
->
úq
] & hook->
id
)

137 
úq_a˘ids
[
hook
->
úq
] |hook->
id
;

138 
	`öå_mask
(
hook
);

139  
TRUE
;

140 
	}
}

	@ipc.h

1 #i‚de‡
IPC_H


2 
	#IPC_H


	)

7 
	~<möix/com.h
>

10 
	#NON_BLOCKING
 0x0080

	)

13 
	#SEND
 1

	)

14 
	#RECEIVE
 2

	)

15 
	#SENDREC
 3

	)

16 
	#NOTIFY
 4

	)

17 
	#SENDNB
 5

	)

18 
	#SENDA
 16

	)

21 
	#CHECK_DEADLOCK
 0x03

	)

23 
	#WILLRECEIVE
(
èrgë
, 
sour˚_ï
) \

24 ((
	`RTS_ISSET
(
èrgë
, 
RECEIVING
Ë&& !RTS_ISSET—¨gë, 
SENDING
)) && \

25 (
èrgë
->
p_gë‰om_e
 =
ANY
 ||Å¨gë->p_gë‰om_ê=
sour˚_ï
))

	)

	@kernel.h

1 #i‚de‡
KERNEL_H


2 
	#KERNEL_H


	)

7 
	#_POSIX_SOURCE
 1

	)

8 
	#_MINIX
 1

	)

9 
	#_SYSTEM
 1

	)

12 
	~<möix/c⁄fig.h
>

13 
	~<™si.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<möix/c⁄°.h
>

16 
	~<möix/ty≥.h
>

17 
	~<möix/ùc.h
>

18 
	~<timîs.h
>

19 
	~<î∫o.h
>

22 
	~"c⁄fig.h
"

23 
	~"c⁄°.h
"

24 
	~"ty≥.h
"

25 
	~"¥Ÿo.h
"

26 
	~"glo.h
"

27 
	~"ùc.h
"

28 
	~"¥ofûe.h
"

29 
	~"debug.h
"

	@main.c

11 
	~"kî√l.h
"

12 
	~<sig«l.h
>

13 
	~<°rög.h
>

14 
	~<uni°d.h
>

15 
	~<a.out.h
>

16 
	~<möix/ˇŒƒ.h
>

17 
	~<möix/com.h
>

18 
	~<möix/ídpoöt.h
>

19 
	~"¥oc.h
"

22 
FORWARD
 
_PROTOTYPE
–
™noun˚
, ());

27 
PUBLIC
 
	$maö
()

30 
boŸ_image
 *
ù
;

31 
¥oc
 *
Ω
;

32 
¥iv
 *
•
;

33 
i
, 
j
, 
s
;

34 
hdrödex
;

35 
phys_˛icks
 
ãxt_ba£
;

36 
vú_˛icks
 
ãxt_˛icks
, 
d©a_˛icks
, 
°_˛icks
;

37 
ªg_t
 
ktsb
;

38 
exec
 
e_hdr
;

44 
Ω
 = 
BEG_PROC_ADDR
, 
i
 = -
NR_TASKS
;Ñ∞< 
END_PROC_ADDR
; ++rp, ++i) {

45 
Ω
->
p_πs_Êags
 = 
SLOT_FREE
;

46 
Ω
->
p_ƒ
 = 
i
;

47 
Ω
->
p_ídpoöt
 = 
	`_ENDPOINT
(0,Ñp->
p_ƒ
);

48 (
µroc_addr
 + 
NR_TASKS
)[
i
] = 
Ω
;

50 
•
 = 
BEG_PRIV_ADDR
, 
i
 = 0; s∞< 
END_PRIV_ADDR
; ++sp, ++i) {

51 
•
->
s_¥oc_ƒ
 = 
NONE
;

52 
•
->
s_id
 = 
i
;

53 
µriv_addr
[
i
] = 
•
;

65 
ktsb
 = (
ªg_t
Ë
t_°ack
;

67 
i
=0; i < 
NR_BOOT_PROCS
; ++i) {

68 
ci
;

69 
bôchunk_t
 
fv
;

70 
ù
 = &
image
[
i
];

71 
Ω
 = 
	`¥oc_addr
(
ù
->
¥oc_ƒ
);

72 
ù
->
ídpoöt
 = 
Ω
->
p_ídpoöt
;

73 
Ω
->
p_max_¥i‹ôy
 = 
ù
->
¥i‹ôy
;

74 
Ω
->
p_¥i‹ôy
 = 
ù
->
¥i‹ôy
;

75 
Ω
->
p_qu™tum_size
 = 
ù
->
qu™tum
;

76 
Ω
->
p_ticks_À·
 = 
ù
->
qu™tum
;

77 
	`°∫˝y
(
Ω
->
p_«me
, 
ù
->
¥oc_«me
, 
P_NAME_LEN
);

78 (Ë
	`gë_¥iv
(
Ω
, (
ù
->
Êags
 & 
SYS_PROC
));

79 
	`¥iv
(
Ω
)->
s_Êags
 = 
ù
->
Êags
;

80 
	`¥iv
(
Ω
)->
s_å≠_mask
 = 
ù
->
å≠_mask
;

86 if(
ù
->
ƒ_k_ˇŒs
 =1 && ip->
k_ˇŒs
[0] =
SYS_ALL_CALLS
)

87 
fv
 = ~0;

89 
fv
 = 0;

91 
ci
 = 0; cò< 
CALL_MASK_SIZE
; ci++)

92 
	`¥iv
(
Ω
)->
s_k_ˇŒ_mask
[
ci
] = 
fv
;

93 if(!
fv
)

94 
ci
 = 0; cò< 
ù
->
ƒ_k_ˇŒs
; ci++)

95 
	`SET_BIT
(
	`¥iv
(
Ω
)->
s_k_ˇŒ_mask
,

96 
ù
->
k_ˇŒs
[
ci
]-
KERNEL_CALL
);

98 
	`¥iv
(
Ω
)->
s_ùc_to
.
chunk
[0] = 
ù
->
ùc_to
;

100 
j
=0; j<
	`BITMAP_CHUNKS
(
NR_SYS_PROCS
); j++) {

101 
Ω
->
p_¥iv
->
s_ùc_£ndªc
.
chunk
[
j
] = ~0L;

103 
	`un£t_sys_bô
(
Ω
->
p_¥iv
->
s_ùc_£ndªc
, 
USER_PRIV_ID
);

105 i‡(
	`iskî√ 
(
	`¥oc_ƒ
(
Ω
))) {

106 i‡(
ù
->
°ksize
 > 0) {

107 
Ω
->
p_¥iv
->
s_°ack_gu¨d
 = (
ªg_t
 *Ë
ktsb
;

108 *
Ω
->
p_¥iv
->
s_°ack_gu¨d
 = 
STACK_GUARD
;

110 
ktsb
 +
ù
->
°ksize
;

111 
Ω
->
p_ªg
.
•
 = 
ktsb
;

112 
hdrödex
 = 0;

114 
hdrödex
 = 1 + 
i
-
NR_TASKS
;

120 
	`¨ch_gë_aout_hódîs
(
hdrödex
, &
e_hdr
);

123 
ãxt_ba£
 = 
e_hdr
.
a_syms
 >> 
CLICK_SHIFT
;

124 
ãxt_˛icks
 = (
e_hdr
.
a_ãxt
 + 
CLICK_SIZE
-1Ë>> 
CLICK_SHIFT
;

125 
d©a_˛icks
 = (
e_hdr
.
a_d©a
+e_hdr.
a_bss
 + 
CLICK_SIZE
-1Ë>> 
CLICK_SHIFT
;

126 
°_˛icks
(
e_hdr
.
a_tŸÆ
 + 
CLICK_SIZE
-1Ë>> 
CLICK_SHIFT
;

127 i‡(!(
e_hdr
.
a_Êags
 & 
A_SEP
))

129 
d©a_˛icks
(
e_hdr
.
a_ãxt
+e_hdr.
a_d©a
+e_hdr.
a_bss
 +

130 
CLICK_SIZE
-1Ë>> 
CLICK_SHIFT
;

131 
ãxt_˛icks
 = 0;

133 
Ω
->
p_memm≠
[
T
].
mem_phys
 = 
ãxt_ba£
;

134 
Ω
->
p_memm≠
[
T
].
mem_Àn
 = 
ãxt_˛icks
;

135 
Ω
->
p_memm≠
[
D
].
mem_phys
 = 
ãxt_ba£
 + 
ãxt_˛icks
;

136 
Ω
->
p_memm≠
[
D
].
mem_Àn
 = 
d©a_˛icks
;

137 
Ω
->
p_memm≠
[
S
].
mem_phys
 = 
ãxt_ba£
 + 
ãxt_˛icks
 + 
°_˛icks
;

138 
Ω
->
p_memm≠
[
S
].
mem_vú
 = 
°_˛icks
;

139 
Ω
->
p_memm≠
[
S
].
mem_Àn
 = 0;

145 
Ω
->
p_ªg
.
pc
 = (
ªg_t
Ë
ù
->
öôül_pc
;

146 
Ω
->
p_ªg
.
psw
 = (
	`iskî√Õ
‘p)Ë? 
INIT_TASK_PSW
 : 
INIT_PSW
;

151 i‡(
	`isu£∫
(
	`¥oc_ƒ
(
Ω
))) {

152 
Ω
->
p_ªg
.
•
 = (Ω->
p_memm≠
[
S
].
mem_vú
 +

153 
Ω
->
p_memm≠
[
S
].
mem_Àn
Ë<< 
CLICK_SHIFT
;

154 
Ω
->
p_ªg
.
•
 -(
ªg_t
);

158 i‡(
Ω
->
p_ƒ
 =
HARDWARE
Ë
	`RTS_SET
‘p, 
NO_PRIORITY
);

159 
	`RTS_UNSET
(
Ω
, 
SLOT_FREE
);

162 
	`Æloc_£gmíts
(
Ω
);

165 #i‡
SPROFILE


166 
•rofûög
 = 0;

168 #i‡
CPROFILE


169 
˝rof_¥ocs_no
 = 0;

172 
vm_ru¬ög
 = 0;

177 
bûl_±r
 = 
	`¥oc_addr
(
IDLE
);

178 
	`™noun˚
();

179 
	`ª°¨t
();

180 
	}
}

185 
PRIVATE
 
	$™noun˚
()

188 
	`k¥ötf
("\nMINIX %s.%s. "

189 #ifde‡
_SVN_REVISION


190 "(" 
_SVN_REVISION
 ")\n"

193 
OS_RELEASE
, 
OS_VERSION
);

194 
	}
}

199 
PUBLIC
 
	$¥ï¨e_shutdown
(
how
)

200 
how
;

203 
timî_t
 
shutdown_timî
;

204 
¥oc
 *
Ω
;

205 
mesßge
 
m
;

211 
	`k¥ötf
("MINIX willÇow be shut down ...\n");

212 
	`tmr_¨g
(&
shutdown_timî
)->
è_öt
 = 
how
;

213 
	`£t_timî
(&
shutdown_timî
, 
	`gë_u±ime
(Ë+ 5*
HZ
, 
möix_shutdown
);

214 
	}
}

219 
PUBLIC
 
	$möix_shutdown
(
ç
)

220 
timî_t
 *
ç
;

226 
	`öå_öô
(
INTS_ORIG
);

227 
	`˛ock_°›
();

228 
	`¨ch_shutdown
(
ç
 ? 
	`tmr_¨g
—p)->
è_öt
 : 
RBT_PANIC
);

229 
	}
}

	@priv.h

1 #i‚de‡
PRIV_H


2 
	#PRIV_H


	)

14 
	~<möix/com.h
>

15 
	~"c⁄°.h
"

16 
	~"ty≥.h
"

19 
	#NR_IO_RANGE
 32

	)

22 
	#NR_MEM_RANGE
 10

	)

25 
	#NR_IRQ
 4

	)

27 
	s¥iv
 {

28 
¥oc_ƒ_t
 
	ms_¥oc_ƒ
;

29 
sys_id_t
 
	ms_id
;

30 
	ms_Êags
;

33 
vú_byãs
 
	ms_asy¡ab
;

34 
size_t
 
	ms_asynsize
;

38 
	ms_å≠_mask
;

39 
sys_m≠_t
 
	ms_ùc_‰om
;

40 
sys_m≠_t
 
	ms_ùc_to
;

41 
sys_m≠_t
 
	ms_ùc_£ndªc
;

44 
	#CALL_MASK_SIZE
 
	`BITMAP_CHUNKS
(
NR_SYS_CALLS
)

	)

45 
bôchunk_t
 
	ms_k_ˇŒ_mask
[
CALL_MASK_SIZE
];

47 
sys_m≠_t
 
	ms_nŸify_≥ndög
;

48 
úq_id_t
 
	ms_öt_≥ndög
;

49 
sig£t_t
 
	ms_sig_≥ndög
;

51 
timî_t
 
	ms_Æ¨m_timî
;

52 
Ár_mem
 
	ms_Ármem
[
NR_REMOTE_SEGS
];

53 
ªg_t
 *
	ms_°ack_gu¨d
;

55 
	ms_ƒ_io_ønge
;

56 
io_ønge
 
	ms_io_èb
[
NR_IO_RANGE
];

58 
	ms_ƒ_mem_ønge
;

59 
mem_ønge
 
	ms_mem_èb
[
NR_MEM_RANGE
];

61 
	ms_ƒ_úq
;

62 
	ms_úq_èb
[
NR_IRQ
];

63 
vú_byãs
 
	ms_gø¡_èbÀ
;

64 
	ms_gø¡_íåõs
;

68 
	#STACK_GUARD
 ((
ªg_t
Ë(‘eg_tË=2 ? 0xBEEF : 0xDEADBEEF))

	)

71 
	#PREEMPTIBLE
 0x02

	)

72 
	#BILLABLE
 0x04

	)

74 
	#SYS_PROC
 0x10

	)

75 
	#CHECK_IO_PORT
 0x20

	)

76 
	#CHECK_IRQ
 0x40

	)

77 
	#CHECK_MEM
 0x80

	)

80 
	#BEG_PRIV_ADDR
 (&
¥iv
[0])

	)

81 
	#END_PRIV_ADDR
 (&
¥iv
[
NR_SYS_PROCS
])

	)

83 
	#¥iv_addr
(
i
Ë(
µriv_addr
)[(i)]

	)

84 
	#¥iv_id
(
Ω
Ë(‘p)->
p_¥iv
->
s_id
)

	)

85 
	#¥iv
(
Ω
Ë(‘p)->
p_¥iv
)

	)

87 
	#id_to_ƒ
(
id
Ë
	`¥iv_addr
(id)->
s_¥oc_ƒ


	)

88 
	#ƒ_to_id
(
ƒ
Ë
	`¥iv
(
	`¥oc_addr
“r))->
s_id


	)

95 
EXTERN
 
¥iv
 
	g¥iv
[
NR_SYS_PROCS
];

96 
EXTERN
 
¥iv
 *
	gµriv_addr
[
NR_SYS_PROCS
];

101 
	#USER_PRIV_ID
 0

	)

107 #i‡(
NR_BOOT_PROCS
 > 
NR_SYS_PROCS
)

108 #îr‹ 
NR_SYS_PROCS
 
mu°
 
be
 
œrgî
 
th™
 
NR_BOOT_PROCS


	@proc.c

39 
	~<möix/com.h
>

40 
	~<möix/ˇŒƒ.h
>

41 
	~<möix/ídpoöt.h
>

42 
	~<°ddef.h
>

43 
	~<sig«l.h
>

44 
	~<möix/p‹tio.h
>

45 
	~<möix/u64.h
>

47 
	~"debug.h
"

48 
	~"kî√l.h
"

49 
	~"¥oc.h
"

50 
	~"vm.h
"

56 
FORWARD
 
_PROTOTYPE
–
möi_£nd
, (
¥oc
 *
ˇŒî_±r
, 
d°_e
,

57 
mesßge
 *
m_±r
, 
Êags
));

58 
FORWARD
 
_PROTOTYPE
–
möi_ª˚ive
, (
¥oc
 *
ˇŒî_±r
, 
§c
,

59 
mesßge
 *
m_±r
, 
Êags
));

60 
FORWARD
 
_PROTOTYPE
–
möi_nŸify
, (
¥oc
 *
ˇŒî_±r
, 
d°
));

61 
FORWARD
 
_PROTOTYPE
–
möi_£nda
, (
¥oc
 *
ˇŒî_±r
,

62 
asynmsg_t
 *
èbÀ
, 
size_t
 
size
));

63 
FORWARD
 
_PROTOTYPE
–
dódlock
, (
fun˘i⁄
,

64 
¥oc
 *
ˇŒî
, 
§c_d°
));

65 
FORWARD
 
_PROTOTYPE
–
åy_async
, (
¥oc
 *
ˇŒî_±r
));

66 
FORWARD
 
_PROTOTYPE
–
åy_⁄e
, (
¥oc
 *
§c_±r
, ¥o¯*
d°_±r
));

67 
FORWARD
 
_PROTOTYPE
–
sched
, (
¥oc
 *
Ω
, *
queue
, *
‰⁄t
));

68 
FORWARD
 
_PROTOTYPE
–
pick_¥oc
, ());

70 
	#BuûdMess
(
m_±r
, 
§c
, 
d°_±r
) \

71 (
m_±r
)->
m_sour˚
 = 
	`¥oc_addr
(
§c
)->
p_ídpoöt
; \

72 (
m_±r
)->
m_ty≥
 = 
	`NOTIFY_FROM
(
§c
); \

73 (
m_±r
)->
NOTIFY_TIMESTAMP
 = 
	`gë_u±ime
(); \

74 
§c
) { \

75 
HARDWARE
: \

76 (
m_±r
)->
NOTIFY_ARG
 = 
	`¥iv
(
d°_±r
)->
s_öt_≥ndög
; \

77 
	`¥iv
(
d°_±r
)->
s_öt_≥ndög
 = 0; \

79 
SYSTEM
: \

80 (
m_±r
)->
NOTIFY_ARG
 = 
	`¥iv
(
d°_±r
)->
s_sig_≥ndög
; \

81 
	`¥iv
(
d°_±r
)->
s_sig_≥ndög
 = 0; \

83 }

	)

85 
	#C›yMess
(
s
,
•
,
sm
,
dp
,
dm
) do { \

86 
vú_byãs
 
d°lö
; \

87 
ídpoöt_t
 
e
 = 
	`¥oc_addr
(
s
)->
p_ídpoöt
; \

88 
vú_addr
 
§c
, 
d°
; \

89 
r
; \

90 
	`timî_°¨t
(0, "copymess"); \

91 if((
d°lö
 = 
	`um≠_loˇl
((
dp
), 
D
, (
vú_byãs
Ë
dm
, (
mesßge
))) == 0){\

92 
	`möix_∑nic
("C›yMess: um≠_loˇ»Áûed", 
__LINE__
); \

95 if(
vm_ru¬ög
 && \

96 (
r
=
	`vm_checkønge
((
dp
), (dp), 
d°lö
, (
mesßge
), 1, 0)Ë!
OK
) { \

97 if(
r
 !
VMSUSPEND
) \

98 
	`möix_∑nic
("C›yMess: vm_checkøngêîr‹", 
__LINE__
); \

99 (
dp
)->
p_vmªque°
.
ßved
.
msgc›y
.
d°
 = (dp); \

100 (
dp
)->
p_vmªque°
.
ßved
.
msgc›y
.
d°_v
 = (
vú_byãs
Ë
dm
; \

101 if(
	`d©a_c›y
((
•
)->
p_ídpoöt
, \

102 (
vú_byãs
Ë(
sm
), 
SYSTEM
, \

103 (
vú_byãs
Ë&(
dp
)->
p_vmªque°
.
ßved
.
msgc›y
.
msgbuf
, \

104 (
mesßge
)Ë!
OK
) { \

105 
	`möix_∑nic
("C›yMess: d©a_c›y faûed", 
__LINE__
);\

107 (
dp
)->
p_vmªque°
.
ßved
.
msgc›y
.
msgbuf
.
m_sour˚
 = 
e
; \

108 (
dp
)->
p_vmªque°
.
ty≥
 = 
VMSTYPE_MSGCOPY
; \

110 
§c
.
¥oc_ƒ_e
 = (
•
)->
p_ídpoöt
; \

111 
d°
.
¥oc_ƒ_e
 = (
dp
)->
p_ídpoöt
; \

112 
§c
.
£gmít
 = 
d°
.£gmíà
D
; \

113 
§c
.
off£t
 = (
vú_byãs
Ë(
sm
); \

114 
d°
.
off£t
 = (
vú_byãs
Ë(
dm
); \

115 if(
	`vútuÆ_c›y
(&
§c
, &
d°
, (
mesßge
)Ë!
OK
) { \

116 
	`k¥ötf
("copymess: copy %d:%lxÅo %d:%lx failed\n",\

117 (
•
)->
p_ídpoöt
, (
sm
), (
dp
)->p_ídpoöt, 
dm
);\

118 
	`möix_∑nic
("C›yMess: vútuÆ_c›y (1ËÁûed", 
__LINE__
); \

120 
§c
.
¥oc_ƒ_e
 = 
SYSTEM
; \

121 
§c
.
off£t
 = (
vú_byãs
Ë&
e
; \

122 if(
	`vútuÆ_c›y
(&
§c
, &
d°
, (
e
)Ë!
OK
) { \

123 
	`k¥ötf
("copymess: copy %d:%lxÅo %d:%lx\n", \

124 (
•
)->
p_ídpoöt
, (
sm
), (
dp
)->p_ídpoöt, 
dm
);\

125 
	`möix_∑nic
("C›yMess: vútuÆ_c›y (2ËÁûed", 
__LINE__
); \

128 
	`timî_íd
(0); \

129 } 0)

	)

134 
PUBLIC
 
	$sys_ˇŒ
(
ˇŒ_ƒ
, 
§c_d°_e
, 
m_±r
, 
bô_m≠
)

135 
ˇŒ_ƒ
;

136 
§c_d°_e
;

137 
mesßge
 *
m_±r
;

138 
bô_m≠
;

144 
¥oc
 *
ˇŒî_±r
 = 
¥oc_±r
;

145 
mask_íåy
;

146 
group_size
;

147 
ªsu…
;

148 
§c_d°_p
;

149 
size_t
 
msg_size
;

151 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

152 
ùc_°©s
.
tŸÆ

	`add64u
(ipc_stats.total, 1);

155 if(
§c_d°_e
 != 4 && src_dst_e != 5 &&

156 
ˇŒî_±r
->
p_ídpoöt
 != 4 && caller_ptr->p_endpoint != 5) {

157 if(
ˇŒ_ƒ
 =
SEND
)

158 
	`k¥ötf
("(%d SENDÅÿ%dË", 
ˇŒî_±r
->
p_ídpoöt
, 
§c_d°_e
);

159 if(
ˇŒ_ƒ
 =
RECEIVE
)

160 
	`k¥ötf
("(%d RECEIVE from %dË", 
ˇŒî_±r
->
p_ídpoöt
, 
§c_d°_e
);

161 if(
ˇŒ_ƒ
 =
SENDREC
)

162 
	`k¥ötf
("(%d SENDRECÅÿ%dË", 
ˇŒî_±r
->
p_ídpoöt
, 
§c_d°_e
);

164 
	`k¥ötf
("(%d %dÅo/‰om %dË", 
ˇŒî_±r
->
p_ídpoöt
, 
ˇŒ_ƒ
, 
§c_d°_e
);

169 i‡(
	`RTS_ISSET
(
ˇŒî_±r
, 
SLOT_FREE
))

171 
	`k¥ötf
("called byÅhe dead?!?\n");

172 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

173 
ùc_°©s
.
dód¥oc
++;

174  
EINVAL
;

186 i‡(
ˇŒ_ƒ
 =
SENDA
)

190 i‡(
§c_d°_e
 =
ANY
)

192 i‡(
ˇŒ_ƒ
 !
RECEIVE
)

194 #i‡
DEBUG_ENABLE_IPC_WARNINGS


195 
	`k¥ötf
("sys_call:Årap %d by %d with badÉndpoint %d\n",

196 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_e
);

198 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

199 
ùc_°©s
.
bad_ídpoöt
++;

200  
EINVAL
;

202 
§c_d°_p
 = 
§c_d°_e
;

207 if(!
	`isokíd±
(
§c_d°_e
, &
§c_d°_p
)) {

208 #i‡
DEBUG_ENABLE_IPC_WARNINGS


209 
	`k¥ötf
("sys_call:Årap %d by %d with badÉndpoint %d\n",

210 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_e
);

212 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

213 
ùc_°©s
.
bad_ídpoöt
++;

214  
EDEADSRCDST
;

221 i‡(
ˇŒ_ƒ
 =
SENDREC
)

223 i‡(! 
	`gë_sys_bô
(
	`¥iv
(
ˇŒî_±r
)->
s_ùc_£ndªc
,

224 
	`ƒ_to_id
(
§c_d°_p
))) {

225 #i‡
DEBUG_ENABLE_IPC_WARNINGS


226 
	`k¥ötf
(

228 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
),

229 
ˇŒî_±r
->
p_«me
, 
§c_d°_p
);

231 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

232 
ùc_°©s
.
d°_nŸ_Ælowed
++;

233 (
ECALLDENIED
);

236 i‡(
ˇŒ_ƒ
 =
SEND
 || cÆl_ƒ =
SENDNB
 || cÆl_ƒ =
NOTIFY
)

238 i‡(! 
	`gë_sys_bô
(
	`¥iv
(
ˇŒî_±r
)->
s_ùc_to
,

239 
	`ƒ_to_id
(
§c_d°_p
))) {

240 #i‡
DEBUG_ENABLE_IPC_WARNINGS


241 
	`k¥ötf
(

243 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_p
);

245 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

246 
ùc_°©s
.
d°_nŸ_Ælowed
++;

247 (
ECALLDENIED
);

253 i‡(
ˇŒ_ƒ
 < 0 || call_nr >= 32)

255 #i‡
DEBUG_ENABLE_IPC_WARNINGS


256 
	`k¥ötf
("sys_call:Årap %dÇotállowed, caller %d, src_dst %d\n",

257 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_p
);

259 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

260 
ùc_°©s
.
bad_ˇŒ
++;

261 (
ETRAPDENIED
);

268 i‡(!(
	`¥iv
(
ˇŒî_±r
)->
s_å≠_mask
 & (1 << 
ˇŒ_ƒ
))) {

269 #i‡
DEBUG_ENABLE_IPC_WARNINGS


270 
	`k¥ötf
("sys_call:Årap %dÇotállowed, caller %d, src_dst %d\n",

271 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_p
);

273 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

274 
ùc_°©s
.
ˇŒ_nŸ_Ælowed
++;

275 (
ETRAPDENIED
);

278 i‡((
	`iskî√ 
(
§c_d°_p
Ë&& 
ˇŒ_ƒ
 !
SENDREC
 && cÆl_ƒ !
RECEIVE
)) {

279 #i‡
DEBUG_ENABLE_IPC_WARNINGS


280 
	`k¥ötf
("sys_call:Årap %dÇotállowed, caller %d, src_dst %d\n",

281 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_e
);

283 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

284 
ùc_°©s
.
ˇŒ_nŸ_Ælowed
++;

285 (
ETRAPDENIED
);

292 if(
ˇŒ_ƒ
 =
SENDA
) {

293 
msg_size
 = (
size_t
Ë
§c_d°_e
;

298 i‡(
msg_size
 > 16*(
NR_TASKS
 + 
NR_PROCS
))

299  
EDOM
;

300 
msg_size
 *(
asynmsg_t
);

302 
msg_size
 = (*
m_±r
);

312 i‡(
ˇŒ_ƒ
 =
SEND
 || cÆl_ƒ =
SENDREC
 ||

313 
ˇŒ_ƒ
 =
RECEIVE
 || cÆl_ƒ =
SENDA
 || cÆl_ƒ =
SENDNB
) {

314 
r
;

315 
phys_byãs
 
lö
;

318 if((
lö
 = 
	`um≠_loˇl
(
ˇŒî_±r
, 
D
, (
vú_byãs
Ë
m_±r
, 
msg_size
)) == 0)

319  
EFAULT
;

330 if(
vm_ru¬ög
 &&

331 (
r
=
	`vm_checkønge
(
ˇŒî_±r
, cÆÀr_±r, 
lö
, 
msg_size
, 1, 0)Ë!
OK
) {

332 if(
r
 !
VMSUSPEND
) {

333 
	`k¥ötf
("SYSTEM:sys_ˇŒ:vm_checkønge:Éº %d\n", 
r
);

334  
r
;

336 
	`möix_∑nic
("vmsu•íd", 
__LINE__
);

341 
ˇŒî_±r
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
ˇŒ_ƒ
 = call_nr;

342 
ˇŒî_±r
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
m_±r
 = m_ptr;

343 
ˇŒî_±r
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
§c_d°_e
 = src_dst_e;

344 
ˇŒî_±r
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
bô_m≠
 = bit_map;

345 
ˇŒî_±r
->
p_vmªque°
.
ty≥
 = 
VMSTYPE_SYS_CALL
;

347 
	`k¥ötf
("SYSTEM: %s:%d: suspending call 0x%lx on ipc buffer 0x%lx\n",

348 
ˇŒî_±r
->
p_«me
, cÆÀr_±r->
p_ídpoöt
, 
ˇŒ_ƒ
, 
m_±r
);

351  
OK
;

357 i‡(
ˇŒ_ƒ
 =
SEND
 || cÆl_ƒ =
SENDREC
 || cÆl_ƒ =
RECEIVE
) {

358 i‡(
group_size
 = 
	`dódlock
(
ˇŒ_ƒ
, 
ˇŒî_±r
, 
§c_d°_p
)) {

360 
	`k¥ötf
("sys_call:Årap %d from %dÅo %d deadlocked, group size %d\n",

361 
ˇŒ_ƒ
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
§c_d°_p
, 
group_size
);

363 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

364 
ùc_°©s
.
dódlock
++;

365 (
ELOCKED
);

377 
ˇŒ_ƒ
) {

378 
SENDREC
:

380 
ˇŒî_±r
->
p_misc_Êags
 |
REPLY_PENDING
;

382 
SEND
:

383 
ªsu…
 = 
	`möi_£nd
(
ˇŒî_±r
, 
§c_d°_e
, 
m_±r
, 0);

384 i‡(
ˇŒ_ƒ
 =
SEND
 || 
ªsu…
 !
OK
)

387 
RECEIVE
:

388 i‡(
ˇŒ_ƒ
 =
RECEIVE
)

389 
ˇŒî_±r
->
p_misc_Êags
 &~
REPLY_PENDING
;

390 
ªsu…
 = 
	`möi_ª˚ive
(
ˇŒî_±r
, 
§c_d°_e
, 
m_±r
, 0);

392 
NOTIFY
:

393 
ªsu…
 = 
	`möi_nŸify
(
ˇŒî_±r
, 
§c_d°_p
);

395 
SENDNB
:

396 
ªsu…
 = 
	`möi_£nd
(
ˇŒî_±r
, 
§c_d°_e
, 
m_±r
, 
NON_BLOCKING
);

398 
SENDA
:

399 
ªsu…
 = 
	`möi_£nda
(
ˇŒî_±r
, (
asynmsg_t
 *)
m_±r
, (
size_t
)
§c_d°_e
);

402 
ªsu…
 = 
EBADCALL
;

406 (
ªsu…
);

407 
	}
}

412 
PRIVATE
 
	$dódlock
(
fun˘i⁄
, 
˝
, 
§c_d°
)

413 
fun˘i⁄
;

414 
¥oc
 *
˝
;

415 
§c_d°
;

423 
¥oc
 *
xp
;

424 
group_size
 = 1;

425 
å≠_Êags
;

426 #i‡
DEBUG_ENABLE_IPC_WARNINGS


427 
¥oc
 *
¥o˚s£s
[
NR_PROCS
 + 
NR_TASKS
];

428 
¥o˚s£s
[0] = 
˝
;

431 
§c_d°
 !
ANY
) {

432 
§c_d°_e
;

433 
xp
 = 
	`¥oc_addr
(
§c_d°
);

434 #i‡
DEBUG_ENABLE_IPC_WARNINGS


435 
¥o˚s£s
[
group_size
] = 
xp
;

437 
group_size
 ++;

442 i‡(
	`RTS_ISSET
(
xp
, 
RECEIVING
)) {

443 if(
xp
->
p_gë‰om_e
 =
ANY
Ë
§c_d°
 = ANY;

444 
	`okíd±
(
xp
->
p_gë‰om_e
, &
§c_d°
);

445 } i‡(
	`RTS_ISSET
(
xp
, 
SENDING
)) {

446 
	`okíd±
(
xp
->
p_£ndto_e
, &
§c_d°
);

455 i‡(
§c_d°
 =
	`¥oc_ƒ
(
˝
)) {

456 i‡(
group_size
 == 2) {

458 i‡((
xp
->
p_πs_Êags
 ^ (
fun˘i⁄
 << 2)Ë& 
SENDING
) {

462 #i‡
DEBUG_ENABLE_IPC_WARNINGS


464 
i
;

465 
	`k¥ötf
("deadlock betweenÅheseÖrocesses:\n");

466 
i
 = 0; i < 
group_size
; i++) {

467 
	`k¥ötf
(" %10†", 
¥o˚s£s
[
i
]->
p_«me
);

468 
	`¥oc_°ackåa˚
(
¥o˚s£s
[
i
]);

472 (
group_size
);

476 
	}
}

481 
PUBLIC
 
	$sys_ˇŒ_ª°¨t
(
ˇŒî
)

482 
¥oc
 *
ˇŒî
;

484 
r
;

485 
	`möix_∑nic
("sys_ˇŒ_ª°¨t", 
NO_NUM
);

486 
	`k¥ötf
("restarting sys_call code 0x%lx, "

488 
ˇŒî
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
ˇŒ_ƒ
,

489 
ˇŒî
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
m_±r
,

490 
ˇŒî
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
§c_d°_e
,

491 
ˇŒî
->
p_vmªque°
.
ßved
.
sys_ˇŒ
.
bô_m≠
);

492 
ˇŒî
->
p_ªg
.
ªåeg
 = 
r
;

493 
	}
}

498 
PRIVATE
 
	$möi_£nd
(
ˇŒî_±r
, 
d°_e
, 
m_±r
, 
Êags
)

499 
¥oc
 *
ˇŒî_±r
;

500 
d°_e
;

501 
mesßge
 *
m_±r
;

502 
Êags
;

508 
¥oc
 *
d°_±r
;

509 
¥oc
 **
xµ
;

510 
d°_p
;

512 
d°_p
 = 
	`_ENDPOINT_P
(
d°_e
);

513 
d°_±r
 = 
	`¥oc_addr
(
d°_p
);

515 i‡(
	`RTS_ISSET
(
d°_±r
, 
NO_ENDPOINT
))

517 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

518 
ùc_°©s
.
d°_dõd
++;

519  
EDSTDIED
;

525 i‡(
	`WILLRECEIVE
(
d°_±r
, 
ˇŒî_±r
->
p_ídpoöt
)) {

527 
	`C›yMess
(
ˇŒî_±r
->
p_ƒ
, cÆÀr_±r, 
m_±r
, 
d°_±r
,

528 
d°_±r
->
p_messbuf
);

529 
	`RTS_UNSET
(
d°_±r
, 
RECEIVING
);

531 if(
Êags
 & 
NON_BLOCKING
) {

532 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

533 
ùc_°©s
.
nŸ_ªady
++;

534 (
ENOTREADY
);

538 
ˇŒî_±r
->
p_messbuf
 = 
m_±r
;

539 
	`RTS_SET
(
ˇŒî_±r
, 
SENDING
);

540 
ˇŒî_±r
->
p_£ndto_e
 = 
d°_e
;

543 
xµ
 = &
d°_±r
->
p_ˇŒî_q
;

544 *
xµ
 !
NIL_PROC
Ëxµ = &(*xµ)->
p_q_lök
;

545 *
xµ
 = 
ˇŒî_±r
;

546 
ˇŒî_±r
->
p_q_lök
 = 
NIL_PROC
;

548 (
OK
);

549 
	}
}

554 
PRIVATE
 
	$möi_ª˚ive
(
ˇŒî_±r
, 
§c_e
, 
m_±r
, 
Êags
)

555 
¥oc
 *
ˇŒî_±r
;

556 
§c_e
;

557 
mesßge
 *
m_±r
;

558 
Êags
;

564 
¥oc
 **
xµ
;

565 
nŸifiˇti⁄
 **
¡f_q_µ
;

566 
mesßge
 
m
;

567 
bô_ƒ
;

568 
sys_m≠_t
 *
m≠
;

569 
bôchunk_t
 *
chunk
;

570 
i
, 
r
, 
§c_id
, 
§c_¥oc_ƒ
, 
§c_p
;

572 if(
§c_e
 =
ANY
Ë
§c_p
 = ANY;

575 
	`okíd±
(
§c_e
, &
§c_p
);

576 i‡(
	`RTS_ISSET
(
	`¥oc_addr
(
§c_p
), 
NO_ENDPOINT
))

578 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

579 
ùc_°©s
.
§c_dõd
++;

580  
ESRCDIED
;

589 i‡(!
	`RTS_ISSET
(
ˇŒî_±r
, 
SENDING
)) {

592 i‡(! (
ˇŒî_±r
->
p_misc_Êags
 & 
REPLY_PENDING
)) {

594 
m≠
 = &
	`¥iv
(
ˇŒî_±r
)->
s_nŸify_≥ndög
;

595 
chunk
=&
m≠
->chunk[0]; chunk<&m≠->chunk[
NR_SYS_CHUNKS
]; chunk++) {

598 i‡(! *
chunk
) ;

599 
i
=0; ! (*
chunk
 & (1<<i)); ++i) {}

600 
§c_id
 = (
chunk
 - &
m≠
->chunk[0]Ë* 
BITCHUNK_BITS
 + 
i
;

601 i‡(
§c_id
 >
NR_SYS_PROCS
) ;

602 
§c_¥oc_ƒ
 = 
	`id_to_ƒ
(
§c_id
);

603 #i‡
DEBUG_ENABLE_IPC_WARNINGS


604 if(
§c_¥oc_ƒ
 =
NONE
) {

605 
	`k¥ötf
("mini_receive: sendingÇotify from NONE\n");

608 i‡(
§c_e
!=
ANY
 && 
§c_p
 !
§c_¥oc_ƒ
) ;

609 *
chunk
 &~(1 << 
i
);

612 
	`BuûdMess
(&
m
, 
§c_¥oc_ƒ
, 
ˇŒî_±r
);

613 
	`C›yMess
(
§c_¥oc_ƒ
, 
	`¥oc_addr
(
HARDWARE
), &
m
, 
ˇŒî_±r
, 
m_±r
);

614 (
OK
);

619 
xµ
 = &
ˇŒî_±r
->
p_ˇŒî_q
;

620 *
xµ
 !
NIL_PROC
) {

621 i‡(
§c_e
 =
ANY
 || 
§c_p
 =
	`¥oc_ƒ
(*
xµ
)) {

623 i‡(
	`RTS_ISSET
(*
xµ
, 
SLOT_FREE
))

625 
	`k¥ötf
("%d:Ñeceive from %d; found dead %d (%s)?\n",

626 
ˇŒî_±r
->
p_ídpoöt
, 
§c_e
, (*
xµ
)->p_endpoint,

627 (*
xµ
)->
p_«me
);

628 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

629 
ùc_°©s
.
dód¥oc
++;

630  
EINVAL
;

635 
	`C›yMess
((*
xµ
)->
p_ƒ
, *xµ, (*xµ)->
p_messbuf
, 
ˇŒî_±r
, 
m_±r
);

636 
	`RTS_UNSET
(*
xµ
, 
SENDING
);

637 *
xµ
 = (*xµ)->
p_q_lök
;

638 (
OK
);

640 
xµ
 = &(*xµ)->
p_q_lök
;

643 i‡(
ˇŒî_±r
->
p_misc_Êags
 & 
MF_ASYNMSG
)

645 i‡(
§c_e
 !
ANY
)

648 
	`k¥ötf
("möi_ª˚ive: shouldÅryásyn¯‰om %d\n", 
§c_e
);

650 
r

EAGAIN
;

654 
ˇŒî_±r
->
p_messbuf
 = 
m_±r
;

655 
r

	`åy_async
(
ˇŒî_±r
);

657 i‡(
r
 =
OK
)

658  
OK
;

665 i‡–! (
Êags
 & 
NON_BLOCKING
)) {

666 
ˇŒî_±r
->
p_gë‰om_e
 = 
§c_e
;

667 
ˇŒî_±r
->
p_messbuf
 = 
m_±r
;

668 
	`RTS_SET
(
ˇŒî_±r
, 
RECEIVING
);

669 (
OK
);

671 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

672 
ùc_°©s
.
nŸ_ªady
++;

673 (
ENOTREADY
);

675 
	}
}

680 
PRIVATE
 
	$möi_nŸify
(
ˇŒî_±r
, 
d°
)

681 
¥oc
 *
ˇŒî_±r
;

682 
d°
;

684 
¥oc
 *
d°_±r
 = 
	`¥oc_addr
(
d°
);

685 
§c_id
;

686 
mesßge
 
m
;

691 i‡–(
	`RTS_ISSET
(
d°_±r
, 
RECEIVING
Ë&& !RTS_ISSET(d°_±r, 
SENDING
)) &&

692 ! (
d°_±r
->
p_misc_Êags
 & 
REPLY_PENDING
) &&

693 (
d°_±r
->
p_gë‰om_e
 =
ANY
 ||

694 
d°_±r
->
p_gë‰om_e
 =
ˇŒî_±r
->
p_ídpoöt
)) {

700 
	`BuûdMess
(&
m
, 
	`¥oc_ƒ
(
ˇŒî_±r
), 
d°_±r
);

701 
	`C›yMess
(
	`¥oc_ƒ
(
ˇŒî_±r
), 
	`¥oc_addr
(
HARDWARE
), &
m
,

702 
d°_±r
, d°_±r->
p_messbuf
);

703 
	`RTS_UNSET
(
d°_±r
, 
RECEIVING
);

704 (
OK
);

711 
§c_id
 = 
	`¥iv
(
ˇŒî_±r
)->
s_id
;

712 
	`£t_sys_bô
(
	`¥iv
(
d°_±r
)->
s_nŸify_≥ndög
, 
§c_id
);

713 (
OK
);

714 
	}
}

716 
	#ASCOMPLAIN
(
ˇŒî
, 
íåy
, 
fõld
) \

717 
	`k¥ötf
("kernel:%s:%d:ásyn failed for %s in %s " \

718 "(%d/%d,Åab 0x%lx)\n",
__FILE__
,
__LINE__
, \

719 
fõld
, 
ˇŒî
->
p_«me
, 
íåy
, 
	`¥iv
(ˇŒî)->
s_asynsize
,Öriv(ˇŒî)->
s_asy¡ab
)

	)

721 
	#A_RETRIEVE
(
íåy
, 
fõld
) \

722 if(
	`d©a_c›y
(
ˇŒî_±r
->
p_ídpoöt
, \

723 
èbÀ_v
 + (
íåy
)*(
asynmsg_t
Ë+ 
	`off£tof
(
asynmsg
,
fõld
),\

724 
SYSTEM
, (
vú_byãs
Ë&
èbít
.
fõld
, \

725 (
èbít
.
fõld
)Ë!
OK
) {\

726 
	`ASCOMPLAIN
(
ˇŒî_±r
, 
íåy
, #field); \

727  
EFAULT
; \

728 }

	)

730 
	#A_INSERT
(
íåy
, 
fõld
) \

731 if(
	`d©a_c›y
(
SYSTEM
, (
vú_byãs
Ë&
èbít
.
fõld
, \

732 
ˇŒî_±r
->
p_ídpoöt
, \

733 
èbÀ_v
 + (
íåy
)*(
asynmsg_t
Ë+ 
	`off£tof
(
asynmsg
,
fõld
),\

734 (
èbít
.
fõld
)Ë!
OK
) {\

735 
	`ASCOMPLAIN
(
ˇŒî_±r
, 
íåy
, #field); \

736  
EFAULT
; \

737 }

	)

742 
PRIVATE
 
	$möi_£nda
(
ˇŒî_±r
, 
èbÀ
, 
size
)

743 
¥oc
 *
ˇŒî_±r
;

744 
asynmsg_t
 *
èbÀ
;

745 
size_t
 
size
;

747 
i
, 
d°_p
, 
d⁄e
, 
do_nŸify
;

748 
Êags
;

749 
¥oc
 *
d°_±r
;

750 
¥iv
 *
¥ivp
;

751 
mesßge
 *
m_±r
;

752 
asynmsg_t
 
èbít
;

753 
vú_byãs
 
èbÀ_v
 = (vú_byãsË
èbÀ
;

755 
¥ivp

	`¥iv
(
ˇŒî_±r
);

756 i‡(!(
¥ivp
->
s_Êags
 & 
SYS_PROC
))

758 
	`k¥ötf
(

760 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

761 
ùc_°©s
.
no_¥iv
++;

762  
EPERM
;

766 
¥ivp
->
s_asy¡ab
= -1;

767 
¥ivp
->
s_asynsize
= 0;

769 i‡(
size
 == 0)

772  
OK
;

781 i‡(
size
 > 16*(
NR_TASKS
 + 
NR_PROCS
))

783 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

784 
ùc_°©s
.
bad_size
++;

785  
EDOM
;

789 
do_nŸify

FALSE
;

790 
d⁄e

TRUE
;

791 
i
0; i<
size
; i++)

795 
	`A_RETRIEVE
(
i
, 
Êags
);

796 
Êags

èbít
.flags;

799 i‡(
Êags
 == 0)

803 i‡(
Êags
 & ~(
AMF_VALID
|
AMF_DONE
|
AMF_NOTIFY
) ||

804 !(
Êags
 & 
AMF_VALID
))

806 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

807 
ùc_°©s
.
bad_£nda
++;

808  
EINVAL
;

812 i‡(
Êags
 & 
AMF_DONE
)

816 
	`A_RETRIEVE
(
i
, 
d°
);

818 i‡(!
	`isokíd±
(
èbít
.
d°
, &
d°_p
))

821 
èbít
.
ªsu…

EDEADSRCDST
;

822 
	`A_INSERT
(
i
, 
ªsu…
);

823 
èbít
.
Êags
Êag†| 
AMF_DONE
;

824 
	`A_INSERT
(
i
, 
Êags
);

826 i‡(
Êags
 & 
AMF_NOTIFY
)

827 
do_nŸify
= 1;

832 
	`k¥ötf
("mini_senda:Éntry[%d]: flags 0x%x dst %d/%d\n",

833 
i
, 
èbít
.
Êags
,Åabít.
d°
, 
d°_p
);

836 
d°_±r
 = 
	`¥oc_addr
(
d°_p
);

839 i‡(
d°_±r
->
p_πs_Êags
 & 
NO_ENDPOINT
)

841 
èbít
.
ªsu…

EDSTDIED
;

842 
	`A_INSERT
(
i
, 
ªsu…
);

843 
èbít
.
Êags
Êag†| 
AMF_DONE
;

844 
	`A_INSERT
(
i
, 
Êags
);

846 i‡(
Êags
 & 
AMF_NOTIFY
)

847 
do_nŸify

TRUE
;

855 i‡–(
d°_±r
->
p_πs_Êags
 & (
RECEIVING
 | 
SENDING
)) ==

856 
RECEIVING
 &&

857 (
d°_±r
->
p_gë‰om_e
 =
ANY
 ||

858 
d°_±r
->
p_gë‰om_e
 =
ˇŒî_±r
->
p_ídpoöt
))

861 
m_±r
&
èbÀ
[
i
].
msg
;

864 
	`C›yMess
(
ˇŒî_±r
->
p_ƒ
, cÆÀr_±r, 
m_±r
, 
d°_±r
,

865 
d°_±r
->
p_messbuf
);

867 
	`RTS_UNSET
(
d°_±r
, 
RECEIVING
);

869 
èbít
.
ªsu…

OK
;

870 
	`A_INSERT
(
i
, 
ªsu…
);

871 
èbít
.
Êags
Êag†| 
AMF_DONE
;

872 
	`A_INSERT
(
i
, 
Êags
);

874 i‡(
Êags
 & 
AMF_NOTIFY
)

875 
do_nŸify
= 1;

881 
d°_±r
->
p_misc_Êags
 |
MF_ASYNMSG
;

882 
d⁄e

FALSE
;

886 i‡(
do_nŸify
)

887 
	`k¥ötf
("mini_senda: shouldÇotify caller\n");

888 i‡(!
d⁄e
)

890 
¥ivp
->
s_asy¡ab
(
vú_byãs
)
èbÀ
;

891 
¥ivp
->
s_asynsize

size
;

893 if(
ˇŒî_±r
->
p_ídpoöt
 > 
INIT_PROC_NR
) {

894 
	`k¥ötf
("kernel: %s (%d)ásynsendÅableát 0x%lx, %d\n",

895 
ˇŒî_±r
->
p_«me
, cÆÀr_±r->
p_ídpoöt
,

896 
èbÀ
, 
size
);

900  
OK
;

901 
	}
}

907 
PRIVATE
 
	$åy_async
(
ˇŒî_±r
)

908 
¥oc
 *
ˇŒî_±r
;

910 
r
;

911 
¥iv
 *
¥ivp
;

912 
¥oc
 *
§c_±r
;

915 
¥ivp
 = 
BEG_PRIV_ADDR
;Öriv∞< 
END_PRIV_ADDR
; ++privp)

917 i‡(
¥ivp
->
s_¥oc_ƒ
 =
NONE
 ||Örivp->
s_id
 =
USER_PRIV_ID
)

919 i‡(
¥ivp
->
s_asynsize
 == 0)

922 
	`k¥ötf
("try_async: foundásyntable forÖroc %d\n",

923 
¥ivp
->
s_¥oc_ƒ
);

925 
§c_±r

	`¥oc_addr
(
¥ivp
->
s_¥oc_ƒ
);

926 
r

	`åy_⁄e
(
§c_±r
, 
ˇŒî_±r
);

927 i‡(
r
 =
OK
)

928  
r
;

932 
ˇŒî_±r
->
p_misc_Êags
 &~
MF_ASYNMSG
;

934  
ESRCH
;

935 
	}
}

941 
PRIVATE
 
	$åy_⁄e
(
§c_±r
, 
d°_±r
)

942 
¥oc
 *
§c_±r
;

943 
¥oc
 *
d°_±r
;

945 
i
, 
do_nŸify
, 
d⁄e
;

946 
Êags
;

947 
size_t
 
size
;

948 
ídpoöt_t
 
d°_e
;

949 
asynmsg_t
 *
èbÀ_±r
;

950 
mesßge
 *
m_±r
;

951 
¥iv
 *
¥ivp
;

952 
asynmsg_t
 
èbít
;

953 
vú_byãs
 
èbÀ_v
;

954 
¥oc
 *
ˇŒî_±r
;

956 
¥ivp

	`¥iv
(
§c_±r
);

957 
size

¥ivp
->
s_asynsize
;

958 
èbÀ_v
 = 
¥ivp
->
s_asy¡ab
;

959 
ˇŒî_±r
 = 
§c_±r
;

961 
d°_e

d°_±r
->
p_ídpoöt
;

964 
do_nŸify

FALSE
;

965 
d⁄e

TRUE
;

966 
i
0; i<
size
; i++)

969 
	`A_RETRIEVE
(
i
, 
Êags
);

970 
Êags

èbít
.flags;

973 i‡(
Êags
 == 0)

979 i‡(
Êags
 & ~(
AMF_VALID
|
AMF_DONE
|
AMF_NOTIFY
) ||

980 !(
Êags
 & 
AMF_VALID
))

982 
	`k¥ötf
("try_one: bad bits inÅable\n");

983 
¥ivp
->
s_asynsize
= 0;

984 i‡(
§c_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

985 
ùc_°©s
.
bad_£nda
++;

986  
EINVAL
;

990 i‡(
Êags
 & 
AMF_DONE
)

998 
d⁄e

FALSE
;

1001 
	`A_RETRIEVE
(
i
, 
d°
);

1003 i‡(
èbít
.
d°
 !
d°_e
)

1009 
èbÀ_±r
(
asynmsg_t
 *)
¥ivp
->
s_asy¡ab
;

1010 
m_±r
&
èbÀ_±r
[
i
].
msg
;

1013 
	`C›yMess
(
§c_±r
->
p_ƒ
, src_±r, 
m_±r
, 
d°_±r
,

1014 
d°_±r
->
p_messbuf
);

1016 
èbít
.
ªsu…

OK
;

1017 
	`A_INSERT
(
i
, 
ªsu…
);

1018 
èbít
.
Êags
Êag†| 
AMF_DONE
;

1019 
	`A_INSERT
(
i
, 
Êags
);

1021 i‡(
Êags
 & 
AMF_NOTIFY
)

1023 
	`k¥ötf
("try_one: shouldÇotify caller\n");

1025  
OK
;

1027 i‡(
d⁄e
)

1028 
¥ivp
->
s_asynsize
= 0;

1029  
EAGAIN
;

1030 
	}
}

1035 
PUBLIC
 
	$lock_nŸify
(
§c_e
, 
d°_e
)

1036 
§c_e
;

1037 
d°_e
;

1045 
ªsu…
, 
§c
, 
d°
;

1047 if(!
	`isokíd±
(
§c_e
, &
§c
Ë|| !isokíd±(
d°_e
, &
d°
))

1048  
EDEADSRCDST
;

1051 i‡(
k_ªíãr
 >= 0) {

1052 
ªsu…
 = 
	`möi_nŸify
(
	`¥oc_addr
(
§c
), 
d°
);

1057 
lock
;

1058 
ªsu…
 = 
	`möi_nŸify
(
	`¥oc_addr
(
§c
), 
d°
);

1059 
u∆ock
;

1061 (
ªsu…
);

1062 
	}
}

1067 
PUBLIC
 
	$so·_nŸify
(
d°_e
)

1068 
d°_e
;

1070 
d°
, 
u
 = 0;

1071 
¥oc
 *
d°p
, *
sys
 = 
	`¥oc_addr
(
SYSTEM
);

1076 if(!
	`öå_dißbÀd
()Ë{ 
lock
; 
u
 = 1; }

1079 if(!
	`isokíd±
(
d°_e
, &
d°
))

1080 
	`möix_∑nic
("so·_nŸifyÅÿdódÉp", 
d°_e
);

1082 
d°p
 = 
	`¥oc_addr
(
d°
);

1084 if(!
d°p
->
p_so·nŸifõd
) {

1085 
d°p
->
√xt_so·_nŸify
 = 
so·nŸify
;

1086 
so·nŸify
 = 
d°p
;

1087 
d°p
->
p_so·nŸifõd
 = 1;

1089 i‡(
	`RTS_ISSET
(
sys
, 
RECEIVING
)) {

1090 
sys
->
p_messbuf
->
m_sour˚
 = 
SYSTEM
;

1091 
	`RTS_UNSET
(
sys
, 
RECEIVING
);

1096 if(
u
Ë{ 
u∆ock
; }

1098  
OK
;

1099 
	}
}

1104 
PUBLIC
 
	$íqueue
(
Ω
)

1105 
¥oc
 *
Ω
;

1112 
q
;

1113 
‰⁄t
;

1115 #i‡
DEBUG_SCHED_CHECK


1116 if(!
	`öå_dißbÀd
()Ë{ 
	`möix_∑nic
("íqueuêwôh i¡îru±†íabÀd", 
NO_NUM
); }

1117 
CHECK_RUNQUEUES
;

1118 i‡(
Ω
->
p_ªady
Ë
	`möix_∑nic
("íqueuêÆªadyÑódyÖro˚ss", 
NO_NUM
);

1122 
	`sched
(
Ω
, &
q
, &
‰⁄t
);

1125 i‡(
rdy_hód
[
q
] =
NIL_PROC
) {

1126 
rdy_hód
[
q
] = 
rdy_èû
[q] = 
Ω
;

1127 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

1129 i‡(
‰⁄t
) {

1130 
Ω
->
p_√xåódy
 = 
rdy_hód
[
q
];

1131 
rdy_hód
[
q
] = 
Ω
;

1134 
rdy_èû
[
q
]->
p_√xåódy
 = 
Ω
;

1135 
rdy_èû
[
q
] = 
Ω
;

1136 
Ω
->
p_√xåódy
 = 
NIL_PROC
;

1143 if(!
¥oc_±r
 ||Öroc_±r->
p_πs_Êags
 ||

1144 (
	`¥iv
(
¥oc_±r
)->
s_Êags
 & 
PREEMPTIBLE
)) {

1145 
	`pick_¥oc
();

1148 #i‡
DEBUG_SCHED_CHECK


1149 
Ω
->
p_ªady
 = 1;

1150 
CHECK_RUNQUEUES
;

1152 
	}
}

1157 
PUBLIC
 
	$dequeue
(
Ω
)

1158 
¥oc
 *
Ω
;

1164 
q
 = 
Ω
->
p_¥i‹ôy
;

1165 
¥oc
 **
xµ
;

1166 
¥oc
 *
¥ev_xp
;

1169 i‡(
	`iskî√Õ
(
Ω
)) {

1170 i‡(*
	`¥iv
(
Ω
)->
s_°ack_gu¨d
 !
STACK_GUARD
)

1171 
	`möix_∑nic
("°ack ovîru¿byÅask", 
	`¥oc_ƒ
(
Ω
));

1174 #i‡
DEBUG_SCHED_CHECK


1175 
CHECK_RUNQUEUES
;

1176 if(!
	`öå_dißbÀd
()Ë{ 
	`möix_∑nic
("dequeuêwôh i¡îru±†íabÀd", 
NO_NUM
); }

1177 i‡(! 
Ω
->
p_ªady
Ë
	`möix_∑nic
("dequeue(ËÆªady uƒódyÖro˚ss", 
NO_NUM
);

1184 
¥ev_xp
 = 
NIL_PROC
;

1185 
xµ
 = &
rdy_hód
[
q
]; *xµ !
NIL_PROC
; xµ = &(*xµ)->
p_√xåódy
) {

1187 i‡(*
xµ
 =
Ω
) {

1188 *
xµ
 = (*xµ)->
p_√xåódy
;

1189 i‡(
Ω
 =
rdy_èû
[
q
])

1190 
rdy_èû
[
q
] = 
¥ev_xp
;

1191 i‡(
Ω
 =
¥oc_±r
 ||Ñ∞=
√xt_±r
)

1192 
	`pick_¥oc
();

1195 
¥ev_xp
 = *
xµ
;

1198 #i‡
DEBUG_SCHED_CHECK


1199 
Ω
->
p_ªady
 = 0;

1200 
CHECK_RUNQUEUES
;

1202 
	}
}

1207 
PRIVATE
 
	$sched
(
Ω
, 
queue
, 
‰⁄t
)

1208 
¥oc
 *
Ω
;

1209 *
queue
;

1210 *
‰⁄t
;

1216 
time_À·
 = (
Ω
->
p_ticks_À·
 > 0);

1222 i‡(! 
time_À·
) {

1223 
Ω
->
p_ticks_À·
 =Ñp->
p_qu™tum_size
;

1224 i‡(
Ω
->
p_¥i‹ôy
 < (
IDLE_Q
-1)) {

1225 
Ω
->
p_¥i‹ôy
 += 1;

1233 *
queue
 = 
Ω
->
p_¥i‹ôy
;

1234 *
‰⁄t
 = 
time_À·
;

1235 
	}
}

1240 
PRIVATE
 
	$pick_¥oc
()

1246 
¥oc
 *
Ω
;

1247 
q
;

1253 
q
=0; q < 
NR_SCHED_QUEUES
; q++) {

1254 i‡–(
Ω
 = 
rdy_hód
[
q
]Ë!
NIL_PROC
) {

1255 
√xt_±r
 = 
Ω
;

1257 if(
Ω
->
p_ídpoöt
 !4 &&Ñp->p_ídpoöà!5 &&Ñp->p_ídpoöà!
IDLE
 &&Ñp->p_ídpoöà!
SYSTEM
)

1258 
	`k¥ötf
("[ru¿%s]", 
Ω
->
p_«me
);

1260 i‡(
	`¥iv
(
Ω
)->
s_Êags
 & 
BILLABLE
)

1261 
bûl_±r
 = 
Ω
;

1265 
	`möix_∑nic
("nÿªadyÖro˚ss", 
NO_NUM
);

1266 
	}
}

1271 
	#Q_BALANCE_TICKS
 100

	)

1272 
PUBLIC
 
	$bÆ™˚_queues
(
ç
)

1273 
timî_t
 *
ç
;

1279 
timî_t
 
queue_timî
;

1280 
¥oc
* 
Ω
;

1281 
˛ock_t
 
√xt_≥riod
;

1282 
ticks_added
 = 0;

1284 
Ω
=
BEG_PROC_ADDR
;Ñp<
END_PROC_ADDR
;Ñp++) {

1285 i‡(! 
	`i£m±yp
(
Ω
)) {

1286 
lock
;

1287 i‡(
Ω
->
p_¥i‹ôy
 >Ñp->
p_max_¥i‹ôy
) {

1288 i‡(
Ω
->
p_πs_Êags
 =0Ë
	`dequeue
(rp);

1289 
ticks_added
 +
Ω
->
p_qu™tum_size
;

1290 
Ω
->
p_¥i‹ôy
 -= 1;

1291 i‡(
Ω
->
p_πs_Êags
 =0Ë
	`íqueue
(rp);

1294 
ticks_added
 +
Ω
->
p_qu™tum_size
 -Ñp->
p_ticks_À·
;

1295 
Ω
->
p_ticks_À·
 =Ñp->
p_qu™tum_size
;

1297 
u∆ock
;

1300 #i‡
DEBUG


1301 
	`k¥ötf
("ticks_added: %d\n", 
ticks_added
);

1307 
√xt_≥riod
 = 
	`MAX
(
Q_BALANCE_TICKS
, 
ticks_added
);

1308 
	`£t_timî
(&
queue_timî
, 
	`gë_u±ime
(Ë+ 
√xt_≥riod
, 
bÆ™˚_queues
);

1309 
	}
}

1314 
PUBLIC
 
	$lock_£nd
(
d°_e
, 
m_±r
)

1315 
d°_e
;

1316 
mesßge
 *
m_±r
;

1319 
ªsu…
;

1320 
lock
;

1321 
ªsu…
 = 
	`möi_£nd
(
¥oc_±r
, 
d°_e
, 
m_±r
, 0);

1322 
u∆ock
;

1323 (
ªsu…
);

1324 
	}
}

1329 
PUBLIC
 
	$lock_íqueue
(
Ω
)

1330 
¥oc
 *
Ω
;

1333 
lock
;

1334 
	`íqueue
(
Ω
);

1335 
u∆ock
;

1336 
	}
}

1341 
PUBLIC
 
	$lock_dequeue
(
Ω
)

1342 
¥oc
 *
Ω
;

1345 i‡(
k_ªíãr
 >= 0) {

1349 
	`dequeue
(
Ω
);

1351 
lock
;

1352 
	`dequeue
(
Ω
);

1353 
u∆ock
;

1355 
	}
}

1360 
PUBLIC
 
¥oc
 *
	$ídpoöt_lookup
(
ídpoöt_t
 
e
)

1362 
n
;

1364 if(!
	`isokíd±
(
e
, &
n
)Ë 
NULL
;

1366  
	`¥oc_addr
(
n
);

1367 
	}
}

1372 #i‡
DEBUG_ENABLE_IPC_WARNINGS


1373 
PUBLIC
 
	$isokíd±_f
(
fûe
, 
löe
, 
e
, 
p
, 
ÁèlÊag
)

1374 *
fûe
;

1375 
löe
;

1377 
PUBLIC
 
	$isokíd±_f
(
e
, 
p
, 
ÁèlÊag
)

1379 
ídpoöt_t
 
e
;

1380 *
p
, 
ÁèlÊag
;

1382 
ok
 = 0;

1396 *
p
 = 
	`_ENDPOINT_P
(
e
);

1397 if(!
	`isok¥o˙
(*
p
)) {

1398 #i‡
DEBUG_ENABLE_IPC_WARNINGS


1400 
	`k¥ötf
("kernel:%s:%d: badÉndpoint %d:Öroc %d out ofÑange\n",

1401 
fûe
, 
löe
, 
e
, *
p
);

1404 } if(
	`i£m±yn
(*
p
)) {

1405 #i‡
DEBUG_ENABLE_IPC_WARNINGS


1407 
	`k¥ötf
("kî√l:%s:%d: badÉndpoöà%d:Öro¯%dÉm±y\n", 
fûe
, 
löe
, 
e
, *
p
);

1410 } if(
	`¥oc_addr
(*
p
)->
p_ídpoöt
 !
e
) {

1411 #i‡
DEBUG_ENABLE_IPC_WARNINGS


1413 
	`k¥ötf
("kî√l:%s:%d: badÉndpoöà%d:Öro¯%d ha†ïà%d (gíî©i⁄ %d vs. %d)\n", 
fûe
, 
löe
,

1414 
e
, *
p
, 
	`¥oc_addr
(*p)->
p_ídpoöt
,

1415 
	`_ENDPOINT_G
(
e
), _ENDPOINT_G(
	`¥oc_addr
(*
p
)->
p_ídpoöt
));

1418 } 
ok
 = 1;

1419 if(!
ok
 && 
ÁèlÊag
) {

1420 
	`möix_∑nic
("övÆidÉndpoöà", 
e
);

1422  
ok
;

1423 
	}
}

	@proc.h

1 #i‚de‡
PROC_H


2 
	#PROC_H


	)

12 
	~<möix/com.h
>

13 
	~"c⁄°.h
"

14 
	~"¥iv.h
"

16 
	s¥oc
 {

17 
°ack‰ame_s
 
	mp_ªg
;

18 
£g‰ame
 
	mp_£g
;

19 
¥oc_ƒ_t
 
	mp_ƒ
;

20 
¥iv
 *
	mp_¥iv
;

21 
	mp_πs_Êags
;

22 
	mp_misc_Êags
;

24 
	mp_¥i‹ôy
;

25 
	mp_max_¥i‹ôy
;

26 
	mp_ticks_À·
;

27 
	mp_qu™tum_size
;

29 
mem_m≠
 
	mp_memm≠
[
NR_LOCAL_SEGS
];

30 
∑geÁu…
 
	mp_∑geÁu…
;

31 
¥oc
 *
	mp_√xçageÁu…
;

33 
˛ock_t
 
	mp_u£r_time
;

34 
˛ock_t
 
	mp_sys_time
;

36 
¥oc
 *
	mp_√xåódy
;

37 
¥oc
 *
	mp_ˇŒî_q
;

38 
¥oc
 *
	mp_q_lök
;

39 
mesßge
 *
	mp_messbuf
;

40 
	mp_gë‰om_e
;

41 
	mp_£ndto_e
;

43 
sig£t_t
 
	mp_≥ndög
;

45 
	mp_«me
[
P_NAME_LEN
];

47 
ídpoöt_t
 
	mp_ídpoöt
;

57 
¥oc
 *
	m√xåe°¨t
;

58 
¥oc
 *
	m√xåeque°‹
;

59 
	#VMSTYPE_SYS_NONE
 0

	)

60 
	#VMSTYPE_SYS_MESSAGE
 1

	)

61 
	#VMSTYPE_SYS_CALL
 2

	)

62 
	#VMSTYPE_MSGCOPY
 3

	)

63 
	mty≥
;

66 
mesßge
 
	mªqmsg
;

70 
	mˇŒ_ƒ
;

71 
mesßge
 *
	mm_±r
;

72 
	m§c_d°_e
;

73 
	mbô_m≠
;

74 } 
	msys_ˇŒ
;

78 
¥oc
 *
	md°
;

79 
vú_byãs
 
	md°_v
;

80 
mesßge
 
	mmsgbuf
;

81 } 
	mmsgc›y
;

82 } 
	mßved
;

85 
vú_byãs
 
	m°¨t
, 
	mÀngth
;

86 
u8_t
 
	mwrôeÊag
;

87 
ídpoöt_t
 
	mwho
;

90 
	mvmªsu…
;

95 
¥oc
 *
	mªque°‹
;

100 } 
	mp_vmªque°
;

102 
¥oc
 *
	m√xt_so·_nŸify
;

103 
	mp_so·nŸifõd
;

105 #i‡
DEBUG_SCHED_CHECK


106 
	mp_ªady
, 
	mp_found
;

111 
	#SLOT_FREE
 0x01

	)

112 
	#NO_PRIORITY
 0x02

	)

113 
	#SENDING
 0x04

	)

114 
	#RECEIVING
 0x08

	)

115 
	#SIGNALED
 0x10

	)

116 
	#SIG_PENDING
 0x20

	)

117 
	#P_STOP
 0x40

	)

118 
	#NO_PRIV
 0x80

	)

119 
	#NO_ENDPOINT
 0x100

	)

120 
	#VMINHIBIT
 0x200

	)

121 
	#PAGEFAULT
 0x400

	)

122 
	#VMREQUEST
 0x800

	)

126 
	#RTS_ISSET
(
Ω
, 
f
Ë((‘p)->
p_πs_Êags
 & (f)Ë=(f))

	)

130 
	#RTS_SET
(
Ω
, 
f
) \

132 if(!(
Ω
)->
p_πs_Êags
Ë{ 
	`dequeue
(rp); } \

133 (
Ω
)->
p_πs_Êags
 |(
f
); \

134 } 0)

	)

137 
	#RTS_UNSET
(
Ω
, 
f
) \

139 
πs
; \

140 
πs
 = (
Ω
)->
p_πs_Êags
; \

141 (
Ω
)->
p_πs_Êags
 &~(
f
); \

142 if(
πs
 && !(
Ω
)->
p_πs_Êags
Ë{ 
	`íqueue
(rp); } \

143 } 0)

	)

146 
	#RTS_LOCK_SET
(
Ω
, 
f
) \

148 if(!(
Ω
)->
p_πs_Êags
Ë{ 
	`lock_dequeue
(rp); } \

149 (
Ω
)->
p_πs_Êags
 |(
f
); \

150 } 0)

	)

153 
	#RTS_LOCK_UNSET
(
Ω
, 
f
) \

155 
πs
; \

156 
πs
 = (
Ω
)->
p_πs_Êags
; \

157 (
Ω
)->
p_πs_Êags
 &~(
f
); \

158 if(
πs
 && !(
Ω
)->
p_πs_Êags
Ë{ 
	`lock_íqueue
(rp); } \

159 } 0)

	)

162 
	#RTS_LOCK_SETFLAGS
(
Ω
, 
f
) \

164 if(!(
Ω
)->
p_πs_Êags
 && (
f
)Ë{ 
	`lock_dequeue
(rp); } \

165 (
Ω
)->
p_πs_Êags
 = (
f
); \

166 } 0)

	)

169 
	#REPLY_PENDING
 0x01

	)

170 
	#MF_VM
 0x08

	)

171 
	#MF_ASYNMSG
 0x10

	)

172 
	#MF_FULLVM
 0x20

	)

179 
	#NR_SCHED_QUEUES
 16

	)

180 
	#TASK_Q
 0

	)

181 
	#MAX_USER_Q
 0

	)

182 
	#USER_Q
 7

	)

183 
	#MIN_USER_Q
 14

	)

184 
	#IDLE_Q
 15

	)

187 
	#BEG_PROC_ADDR
 (&
¥oc
[0])

	)

188 
	#BEG_USER_ADDR
 (&
¥oc
[
NR_TASKS
])

	)

189 
	#END_PROC_ADDR
 (&
¥oc
[
NR_TASKS
 + 
NR_PROCS
])

	)

191 
	#NIL_PROC
 ((
¥oc
 *Ë0)

	)

192 
	#NIL_SYS_PROC
 ((
¥oc
 *Ë1)

	)

193 
	#˝roc_addr
(
n
Ë(&(
¥oc
 + 
NR_TASKS
)[“)])

	)

194 
	#¥oc_addr
(
n
Ë(
µroc_addr
 + 
NR_TASKS
)[“)]

	)

195 
	#¥oc_ƒ
(
p
Ë(’)->
p_ƒ
)

	)

197 
	#isok¥o˙
(
n
Ë((Ë(“Ë+ 
NR_TASKS
Ë< 
NR_PROCS
 + NR_TASKS)

	)

198 
	#i£m±yn
(
n
Ë
	`i£m±yp
(
	`¥oc_addr
“))

	)

199 
	#i£m±yp
(
p
Ë(’)->
p_πs_Êags
 =
SLOT_FREE
)

	)

200 
	#iskî√Õ
(
p
Ë
	`iskî√ 
(’)->
p_ƒ
)

	)

201 
	#iskî√ 
(
n
Ë(“Ë< 0)

	)

202 
	#isu£Ω
(
p
Ë
	`isu£∫
(’)->
p_ƒ
)

	)

203 
	#isu£∫
(
n
Ë(“Ë>0)

	)

210 
EXTERN
 
¥oc
 
	g¥oc
[
NR_TASKS
 + 
NR_PROCS
];

211 
EXTERN
 
¥oc
 *
	gµroc_addr
[
NR_TASKS
 + 
NR_PROCS
];

212 
EXTERN
 
¥oc
 *
	grdy_hód
[
NR_SCHED_QUEUES
];

213 
EXTERN
 
¥oc
 *
	grdy_èû
[
NR_SCHED_QUEUES
];

	@profile.c

18 
	~<möix/c⁄fig.h
>

20 #i‡
SPROFILE
 || 
CPROFILE


22 
	~<möix/¥ofûe.h
>

23 
	~<möix/p‹tio.h
>

24 
	~"kî√l.h
"

25 
	~"¥ofûe.h
"

26 
	~"¥oc.h
"

30 #i‡
SPROFILE


32 
	~<°rög.h
>

35 
FORWARD
 
_PROTOTYPE
–
¥ofûe_˛ock_h™dÀr
, (
úq_hook_t
 *
hook
) );

38 
PRIVATE
 
úq_hook_t
 
	g¥ofûe_˛ock_hook
;

43 
PUBLIC
 
	$öô_¥ofûe_˛ock
(
u32_t
 
‰eq
)

45 
r
, 
úq
;

47 
	`öå_dißbÀ
();

49 if((
úq
 = 
	`¨ch_öô_¥ofûe_˛ock
(
‰eq
)) >= 0) {

51 
¥ofûe_˛ock_hook
.
¥oc_ƒ_e
 = 
CLOCK
;

52 
	`put_úq_h™dÀr
(&
¥ofûe_˛ock_hook
, 
úq
, 
¥ofûe_˛ock_h™dÀr
);

53 
	`íabÀ_úq
(&
¥ofûe_˛ock_hook
);

56 
	`öå_íabÀ
();

57 
	}
}

62 
PUBLIC
 
	$°›_¥ofûe_˛ock
()

64 
	`öå_dißbÀ
();

65 
	`¨ch_°›_¥ofûe_˛ock
();

66 
	`öå_íabÀ
();

69 
	`dißbÀ_úq
(&
¥ofûe_˛ock_hook
);

70 
	`rm_úq_h™dÀr
(&
¥ofûe_˛ock_hook
);

71 
	}
}

76 
PRIVATE
 
	$¥ofûe_˛ock_h™dÀr
(
hook
)

77 
úq_hook_t
 *
hook
;

82 i‡(!
•rofûög
 || 
•rof_öfo
.
mem_u£d
 == -1)  (1);

85 i‡(
•rof_öfo
.
mem_u£d
 + (•rof_öfoË> 
•rof_mem_size
) {

86 
•rof_öfo
.
mem_u£d
 = -1;

93 i‡(
	`¥iv
(
¥oc_±r
)->
s_¥oc_ƒ
 =
IDLE
) {

94 
•rof_öfo
.
idÀ_ßm∂es
++;

97 i‡(
	`¥iv
(
¥oc_±r
)->
s_Êags
 & 
SYS_PROC
 && !¥oc_±r->
p_πs_Êags
) {

101 
	`d©a_c›y
(
SYSTEM
, (
vú_byãs
Ë
¥oc_±r
->
p_«me
,

102 
•rof_ï
, 
•rof_d©a_addr_vú
 + 
•rof_öfo
.
mem_u£d
,

103 
	`°æí
(
¥oc_±r
->
p_«me
));

105 
	`d©a_c›y
(
SYSTEM
, (
vú_byãs
Ë&
¥oc_±r
->
p_ªg
.
pc
, 
•rof_ï
,

106 (
vú_byãs
Ë(
•rof_d©a_addr_vú
 + 
•rof_öfo
.
mem_u£d
 +

107 (
¥oc_±r
->
p_«me
)),

108 (
vú_byãs
Ë(
¥oc_±r
->
p_ªg
.
pc
));

110 
•rof_öfo
.
mem_u£d
 +(
•rof_ßm∂e
);

112 
•rof_öfo
.
sy°em_ßm∂es
++;

115 
•rof_öfo
.
u£r_ßm∂es
++;

118 
•rof_öfo
.
tŸÆ_ßm∂es
++;

121 
	`¨ch_ack_¥ofûe_˛ock
();

124 
	}
}

129 #i‡
CPROFILE


140 
˝rof_tbl_s
 
	g˝rof_tbl
[
CPROF_TABLE_SIZE_KERNEL
];

143 
PUBLIC
 
	$¥ofûe_gë_tbl_size
()

145  
CPROF_TABLE_SIZE_KERNEL
;

146 
	}
}

149 
PUBLIC
 
	$¥ofûe_gë_™noun˚
()

151  
CPROF_ACCOUNCE_KERNEL
;

152 
	}
}

158 
PUBLIC
 
	$¥ofûe_ªgi°î
(
˘l_±r
, 
tbl_±r
)

159 *
˘l_±r
;

160 *
tbl_±r
;

162 
¥oc_ƒ
;

163 
vú_byãs
 
vú_d°
;

164 
¥oc
 *
Ω
;

166 if(
˝rof_¥ocs_no
 >
NR_SYS_PROCS
)

170 
Ω
 = 
	`¥oc_addr
(
SYSTEM
);

172 
˝rof_¥oc_öfo
[
˝rof_¥ocs_no
].
íd±
 = 
Ω
->
p_ídpoöt
;

173 
˝rof_¥oc_öfo
[
˝rof_¥ocs_no
].
«me
 = 
Ω
->
p_«me
;

174 
˝rof_¥oc_öfo
[
˝rof_¥ocs_no
].
˘l_v
 = (
vú_byãs
Ë
˘l_±r
;

175 
˝rof_¥oc_öfo
[
˝rof_¥ocs_no
].
buf_v
 = (
vú_byãs
Ë
tbl_±r
;

177 
˝rof_¥ocs_no
++;

178 
	}
}

	@profile.h

1 #i‚de‡
PROFILE_H


2 
	#PROFILE_H


	)

4 #i‡
SPROFILE
 || 
CPROFILE


5 
	~<möix/¥ofûe.h
>

8 #i‡
SPROFILE


10 
EXTERN
 
	g•rofûög
;

11 
EXTERN
 
	g•rof_mem_size
;

12 
EXTERN
 
•rof_öfo_s
 
	g•rof_öfo
;

13 
EXTERN
 
vú_byãs
 
	g•rof_d©a_addr_vú
;

14 
EXTERN
 
ídpoöt_t
 
	g•rof_ï
;

19 #i‡
CPROFILE


21 
EXTERN
 
	g˝rof_mem_size
;

22 
EXTERN
 
˝rof_öfo_s
 
	g˝rof_öfo
;

23 
EXTERN
 
	g˝rof_¥ocs_no
;

24 
EXTERN
 
	s˝rof_¥oc_öfo_s
 {

25 
ídpoöt_t
 
	míd±
;

26 *
	m«me
;

27 
vú_byãs
 
	m˘l_v
;

28 
vú_byãs
 
	mbuf_v
;

29 
	m¶Ÿs_u£d
;

30 } 
	g˝rof_¥oc_öfo_ö°
;

31 
EXTERN
 
˝rof_¥oc_öfo_s
 
	g˝rof_¥oc_öfo
[
NR_SYS_PROCS
];

	@proto.h

3 #i‚de‡
PROTO_H


4 
	#PROTO_H


	)

6 
	~<möix/ß„c›õs.h
>

7 
	~<¨chty≥s.h
>

8 
	~<a.out.h
>

11 
	g¥oc
;

12 
	gtimî
;

15 
_PROTOTYPE
–
˛ock_èsk
, () );

16 
_PROTOTYPE
–
˛ock_t
 
gë_u±ime
, () );

17 
_PROTOTYPE
–
£t_timî
, (
timî
 *
ç
, 
˛ock_t
 
t
, 
tmr_func_t
 
f
) );

18 
_PROTOTYPE
–
ª£t_timî
, (
timî
 *
ç
) );

19 
_PROTOTYPE
–
£r_dump_¥oc
, () );

22 
_PROTOTYPE
–
maö
, () );

23 
_PROTOTYPE
–
¥ï¨e_shutdown
, (
how
) );

24 
_PROTOTYPE
–
möix_shutdown
, (
timî
 *
ç
) );

25 
_PROTOTYPE
–
idÀ_èsk
, () );

28 
_PROTOTYPE
–
k¥ötf
, (c⁄° *
fmt
, ...) );

29 
_PROTOTYPE
–
möix_∑nic
, (*
s
, 
n
) );

32 
_PROTOTYPE
–
sys_ˇŒ
, (
ˇŒ_ƒ
, 
§c_d°
,

33 
mesßge
 *
m_±r
, 
bô_m≠
) );

34 
_PROTOTYPE
–
sys_ˇŒ_ª°¨t
, (
¥oc
 *
ˇŒî
) );

35 
_PROTOTYPE
–
lock_nŸify
, (
§c
, 
d°
) );

36 
_PROTOTYPE
–
so·_nŸify
, (
d°
) );

37 
_PROTOTYPE
–
lock_£nd
, (
d°
, 
mesßge
 *
m_±r
) );

38 
_PROTOTYPE
–
lock_íqueue
, (
¥oc
 *
Ω
) );

39 
_PROTOTYPE
–
lock_dequeue
, (
¥oc
 *
Ω
) );

40 
_PROTOTYPE
–
íqueue
, (
¥oc
 *
Ω
) );

41 
_PROTOTYPE
–
dequeue
, (
¥oc
 *
Ω
) );

42 
_PROTOTYPE
–
bÆ™˚_queues
, (
timî
 *
ç
) );

43 
_PROTOTYPE
–
¥oc
 *
ídpoöt_lookup
, (
ídpoöt_t
 
ï
) );

44 #i‡
DEBUG_ENABLE_IPC_WARNINGS


45 
_PROTOTYPE
–
isokíd±_f
, (*
fûe
, 
löe
, 
ídpoöt_t
 
e
, *
p
, 
f
));

46 
	#isokíd±_d
(
e
, 
p
, 
f
Ë
	`isokíd±_f
(
__FILE__
, 
__LINE__
, (e), (p), (f))

	)

48 
_PROTOTYPE
–
isokíd±_f
, (
ídpoöt_t
 
e
, *
p
, 
f
) );

49 
	#isokíd±_d
(
e
, 
p
, 
f
Ë
	`isokíd±_f
(”), (p), (f))

	)

53 
_PROTOTYPE
–
c°¨t
, (
U16_t
 
cs
, U16_à
ds
, U16_à
mds
,

54 
U16_t
 
∑rmoff
, U16_à
∑rmsize
) );

57 
_PROTOTYPE
–
gë_¥iv
, (
¥oc
 *
rc
, 
¥oc_ty≥
) );

58 
_PROTOTYPE
–
£nd_sig
, (
¥oc_ƒ
, 
sig_ƒ
) );

59 
_PROTOTYPE
–
ˇu£_sig
, (
¥oc_ƒ
, 
sig_ƒ
) );

60 
_PROTOTYPE
–
sys_èsk
, () );

61 
_PROTOTYPE
–
gë_øndom√ss
, (
sour˚
) );

62 
	#num≠_loˇl
(
¥oc_ƒ
, 
vú_addr
, 
byãs
) \

63 
	`um≠_loˇl
(
	`¥oc_addr
(
¥oc_ƒ
), 
D
, (
vú_addr
), (
byãs
))

	)

64 
_PROTOTYPE
–
phys_byãs
 
um≠_gø¡
, (
¥oc
 *, 
˝_gø¡_id_t
,

65 
vú_byãs
));

66 
_PROTOTYPE
–
vú_byãs
 
vú_vîify_gø¡
, (
¥oc
 *, 
ídpoöt_t
,

67 
˝_gø¡_id_t
, 
vú_byãs
, vú_byãs, , 
ídpoöt_t
 *));

68 
_PROTOTYPE
–
˛ór_ídpoöt
, (
¥oc
 *
rc
) );

69 
_PROTOTYPE
–
phys_byãs
 
um≠_bios
, (
vú_byãs
 
vú_addr
, vú_byã†
byãs
));

70 
_PROTOTYPE
–
phys_byãs
 
um≠_vîify_gø¡
, (
¥oc
 *
Ω
, 
ídpoöt_t
 
gø¡ì
, 
˝_gø¡_id_t
 
gø¡
, 
vú_byãs
 
off£t
, vú_byã†
byãs
, 
ac˚ss
));

74 
_PROTOTYPE
–
√wm≠
, (
¥oc
 *
Ω
, 
mem_m≠
 *
m≠_±r
) );

77 
_PROTOTYPE
–
öå_h™dÀ
, (
úq_hook_t
 *
hook
) );

78 
_PROTOTYPE
–
put_úq_h™dÀr
, (
úq_hook_t
 *
hook
, 
úq
,

79 
úq_h™dÀr_t
 
h™dÀr
) );

80 
_PROTOTYPE
–
rm_úq_h™dÀr
, (
úq_hook_t
 *
hook
) );

81 
_PROTOTYPE
–
íabÀ_úq
, (
úq_hook_t
 *
hook
) );

82 
_PROTOTYPE
–
dißbÀ_úq
, (
úq_hook_t
 *
hook
) );

83 
_PROTOTYPE
–
c⁄s_£tc
, (
pos
, 
c
) );

84 
_PROTOTYPE
–
c⁄s_£th
, (
pos
, 
n
) );

87 #i‡
DEBUG_SCHED_CHECK


88 
	#CHECK_RUNQUEUES
 
	`check_runqueues_f
(
__FILE__
, 
__LINE__
)

	)

89 
_PROTOTYPE
–
check_runqueues_f
, (*
fûe
, 
löe
) );

91 
_PROTOTYPE
–
timî_°¨t
, (
ˇt
, *
«me
) );

92 
_PROTOTYPE
–
timî_íd
, (
ˇt
) );

95 
_PROTOTYPE
–
vîify_gø¡
, (
ídpoöt_t
,Éndpoöt_t, 
˝_gø¡_id_t
, 
vú_byãs
,

96 , 
vú_byãs
, vú_byã†*, 
ídpoöt_t
 *));

98 #i‡
SPROFILE


100 
_PROTOTYPE
–
öô_¥ofûe_˛ock
, (
u32_t
) );

101 
_PROTOTYPE
–
°›_¥ofûe_˛ock
, () );

105 
_PROTOTYPE
–
phys_c›y
, (
phys_byãs
 
sour˚
,Öhys_byã†
de°
,

106 
phys_byãs
 
cou¡
) );

107 
	#vútuÆ_c›y
(
§c
, 
d°
, 
byãs
Ë
	`vútuÆ_c›y_f
(§c, d°, byãs, 0)

	)

108 
	#vútuÆ_c›y_vmcheck
(
§c
, 
d°
, 
byãs
Ë
	`vútuÆ_c›y_f
(§c, d°, byãs, 1)

	)

109 
_PROTOTYPE
–
vútuÆ_c›y_f
, (
vú_addr
 *
§c
, vú_add∏*
d°
,

110 
vú_byãs
 
byãs
, 
vmcheck
) );

111 
_PROTOTYPE
–
d©a_c›y
, (
ídpoöt_t
 
‰om
, 
vú_byãs
 
‰om_addr
,

112 
ídpoöt_t
 
to
, 
vú_byãs
 
to_addr
, 
size_t
 
byãs
));

113 
	#d©a_c›y_to
(
d
, 
p
, 
v
, 
n
Ë
	`d©a_c›y
(
SYSTEM
, (d), (p), (v), (n));

	)

114 
	#d©a_c›y_‰om
(
d
, 
p
, 
v
, 
n
Ë
	`d©a_c›y
(’), (v), 
SYSTEM
, (d), (n));

	)

115 
_PROTOTYPE
–
Æloc_£gmíts
, (
¥oc
 *
Ω
) );

116 
_PROTOTYPE
–
vm_öô
, () );

117 
_PROTOTYPE
–
vm_m≠_ønge
, (
u32_t
 
ba£
, u32_à
size
, u32_à
off£t
) );

118 
_PROTOTYPE
–
vm_c›y
, (
vú_byãs
 
§c
, 
¥oc
 *
§˝roc
,

119 
vú_byãs
 
d°
, 
¥oc
 *
d°¥oc
, 
phys_byãs
 
byãs
));

120 
_PROTOTYPE
–
phys_byãs
 
um≠_loˇl
, (
¥oc
 *
Ω
, 
£g
,

121 
vú_byãs
 
vú_addr
, vú_byã†
byãs
));

122 
_PROTOTYPE
–
˝_mess
, (
§c
,
phys_˛icks
 
§c_˛icks
,

123 
vú_byãs
 
§c_off£t
, 
phys_˛icks
 
d°_˛icks
, vú_byã†
d°_off£t
));

124 
_PROTOTYPE
–
phys_byãs
 
um≠_ªmŸe
, (
¥oc
* 
Ω
, 
£g
,

125 
vú_byãs
 
vú_addr
, vú_byã†
byãs
) );

126 
_PROTOTYPE
–
phys_byãs
 
um≠_vútuÆ
, (
¥oc
* 
Ω
, 
£g
,

127 
vú_byãs
 
vú_addr
, vú_byã†
byãs
) );

128 
_PROTOTYPE
–
phys_byãs
 
£g2phys
, (
U16_t
) );

129 
_PROTOTYPE
–
phys_mem£t
, (
phys_byãs
 
sour˚
, 
∑âîn
,

130 
phys_byãs
 
cou¡
) );

131 
_PROTOTYPE
–
vú_byãs
 
Æloc_ªmŸe_£gmít
, (
u32_t
 *, 
£g‰ame_t
 *,

132 , 
phys_byãs
, 
vú_byãs
, ));

133 
_PROTOTYPE
–
¨ch_öô_˛ock
, () );

134 
_PROTOTYPE
–
˛ock_t
 
ªad_˛ock
, () );

135 
_PROTOTYPE
–
˛ock_°›
, () );

136 
_PROTOTYPE
–
öå_öô
, () );

137 
_PROTOTYPE
–
öå_dißbÀd
, () );

138 
_PROTOTYPE
–
öå_unmask
, (
úq_hook_t
* 
hook
) );

139 
_PROTOTYPE
–
öå_mask
, (
úq_hook_t
* 
hook
) );

140 
_PROTOTYPE
–
idÀ_èsk
, () );

141 
_PROTOTYPE
–
sy°em_öô
, () );

142 
_PROTOTYPE
–
£r_putc
, () );

143 
_PROTOTYPE
–
¨ch_shutdown
, () );

144 
_PROTOTYPE
–
¨ch_gë_aout_hódîs
, (
i
, 
exec
 *
h
) );

145 
_PROTOTYPE
–
ª°¨t
, () );

146 
_PROTOTYPE
–
idÀ_èsk
, () );

147 
_PROTOTYPE
–
ªad_tsc
, (*
high
, *
low
) );

148 
_PROTOTYPE
–
¨ch_öô_¥ofûe_˛ock
, (
u32_t
 
‰eq
) );

149 
_PROTOTYPE
–
¨ch_°›_¥ofûe_˛ock
, () );

150 
_PROTOTYPE
–
¨ch_ack_¥ofûe_˛ock
, () );

151 
_PROTOTYPE
–
do_£r_debug
, () );

152 
_PROTOTYPE
–
¨ch_gë_∑øms
, (*
∑rm
, 
max
));

153 
_PROTOTYPE
–
¨ch_£t_∑øms
, (*
∑rm
, 
max
));

154 
_PROTOTYPE
–
¨ch_¥e_exec
, (
¥oc
 *
¥
, 
u32_t
, u32_t));

155 
_PROTOTYPE
–
¨ch_um≠
, (
¥oc
 *
¥
, 
vú_byãs
, vir_bytes,

156 , 
phys_byãs
 *));

157 
_PROTOTYPE
–
¨ch_do_vm˘l
, (
mesßge
 *
m_±r
, 
¥oc
 *
p
));

158 
_PROTOTYPE
–
vm_c⁄tiguous
, (
¥oc
 *
èrgë¥oc
, 
u32_t
 
vú_buf
, 
size_t
 
cou¡
));

159 
_PROTOTYPE
–
vm_checkønge
, (
¥oc
 *
ˇŒî
, ¥o¯*
èrgë
,

160 
vú_byãs
 
°¨t
, vú_byã†
Àngth
, 
wrôeÊag
, 
check⁄ly
));

161 
_PROTOTYPE
–
¥oc_°ackåa˚
, (
¥oc
 *proc) );

162 
_PROTOTYPE
–
vm_lookup
, (
¥oc
 *¥oc, 
vú_byãs
 
vútuÆ
, vú_byã†*
ªsu…
, 
u32_t
 *
±ít
));

	@start.c

4 
	~"kî√l.h
"

5 
	~"¥oc.h
"

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<¨chc⁄°.h
>

10 
FORWARD
 
_PROTOTYPE
–*
gë_vÆue
, (
_CONST
 *
∑øms
, _CONST *
key
));

14 
PUBLIC
 
	$c°¨t
(
cs
, 
ds
, 
mds
, 
∑rmoff
, 
∑rmsize
)

15 
U16_t
 
cs
, 
ds
;

16 
U16_t
 
mds
;

17 
U16_t
 
∑rmoff
, 
∑rmsize
;

22 *
vÆue
;

23 
ëext
, 
íd
;

24 
h
;

27 
köfo
.
code_ba£
 = 
	`£g2phys
(
cs
);

28 
köfo
.
code_size
 = (
phys_byãs
Ë&
ëext
;

29 
köfo
.
d©a_ba£
 = 
	`£g2phys
(
ds
);

30 
köfo
.
d©a_size
 = (
phys_byãs
Ë&
íd
;

33 
	`sy°em_öô
();

36 
	`¨ch_gë_∑øms
(
∑øms_buf„r
, (params_buffer));

39 
köfo
.
ƒ_¥ocs
 = 
NR_PROCS
;

40 
köfo
.
ƒ_èsks
 = 
NR_TASKS
;

41 
	`°∫˝y
(
köfo
.
ªÀa£
, 
OS_RELEASE
, (kinfo.release));

42 
köfo
.
ªÀa£
[(kinfo.release)-1] = '\0';

43 
	`°∫˝y
(
köfo
.
vîsi⁄
, 
OS_VERSION
, (kinfo.version));

44 
köfo
.
vîsi⁄
[(kinfo.version)-1] = '\0';

45 
köfo
.
¥oc_addr
 = (
vú_byãs
Ë
¥oc
;

48 
klﬂdöfo
.
¥oc_œ°_¶Ÿ
 = 0;

49 
h
 = 0; h < 
_LOAD_HISTORY
; h++)

50 
klﬂdöfo
.
¥oc_lﬂd_hi°‹y
[
h
] = 0;

53 
machöe
.
¥o˚ss‹
=
	`©oi
(
	`gë_vÆue
(
∑øms_buf„r
, "processor"));

56 
vÆue
 = 
	`gë_vÆue
(
∑øms_buf„r
, "bus");

57 i‡(
vÆue
 =
NIL_PTR
 || 
	`°rcmp
(value, "at") == 0) {

58 
machöe
.
pc_©
 = 
TRUE
;

59 } i‡(
	`°rcmp
(
vÆue
, "mca") == 0) {

60 
machöe
.
pc_©
 = machöe.
ps_mˇ
 = 
TRUE
;

64 
vÆue
 = 
	`gë_vÆue
(
∑øms_buf„r
, "video");

65 i‡(
	`°rcmp
(
vÆue
, "ega"Ë=0Ë
machöe
.
vdu_ega
 = 
TRUE
;

66 i‡(
	`°rcmp
(
vÆue
, "vga"Ë=0Ë
machöe
.
vdu_vga
 = machöe.
vdu_ega
 = 
TRUE
;

72 
	`öå_öô
(
INTS_MINIX
);

73 
	}
}

78 
PRIVATE
 *
	$gë_vÆue
(
∑øms
, 
«me
)

79 
_CONST
 *
∑øms
;

80 
_CONST
 *
«me
;

85 
_CONST
 *
«mï
;

86 *
ívp
;

88 
ívp
 = (*Ë
∑øms
; *envp != 0;) {

89 
«mï
 = 
«me
; *«mï !0 && *«mï =*
ívp
;Çamep++,Énvp++)

91 i‡(*
«mï
 ='\0' && *
ívp
 == '=') (envp + 1);

92 *
ívp
++ != 0)

95 (
NIL_PTR
);

96 
	}
}

	@system.c

29 
	~"debug.h
"

30 
	~"kî√l.h
"

31 
	~"sy°em.h
"

32 
	~"¥oc.h
"

33 
	~"vm.h
"

34 
	~<°dlib.h
>

35 
	~<sig«l.h
>

36 
	~<uni°d.h
>

37 
	~<°rög.h
>

38 
	~<sys/sigc⁄ãxt.h
>

39 
	~<möix/ídpoöt.h
>

40 
	~<möix/ß„c›õs.h
>

41 
	~<möix/u64.h
>

42 
	~<sys/vm_i386.h
>

50 
PUBLIC
 (*
ˇŒ_vec
[
NR_SYS_CALLS
])(
mesßge
 *
m_±r
);

51 *
ˇŒ«mes
[
NR_SYS_CALLS
];

53 
	#m≠
(
ˇŒ_ƒ
, 
h™dÀr
) \

54 {
dummy
[
NR_SYS_CALLS
>()(
ˇŒ_ƒ
-
KERNEL_CALL
Ë? 1:-1];
	}
} \

55 
ˇŒ«mes
[(
ˇŒ_ƒ
-
KERNEL_CALL
)] = #call_nr; \

56 
ˇŒ_vec
[(
ˇŒ_ƒ
-
KERNEL_CALL
)] = (
h™dÀr
)

	)

58 
FORWARD
 
_PROTOTYPE
–
öôülize
, ());

59 
FORWARD
 
_PROTOTYPE
–
so·nŸify_check
, ());

60 
FORWARD
 
_PROTOTYPE
–
¥oc
 *
vmª°¨t_check
, (
mesßge
 *));

65 
PUBLIC
 
	$sys_èsk
()

68 
mesßge
 
m
;

69 
ªsu…
;

70 
¥oc
 *
ˇŒî_±r
;

71 
s
;

72 
ˇŒ_ƒ
;

73 
n
 = 0;

76 
	`öôülize
();

78 
TRUE
) {

79 
¥oc
 *
ª°¨tög
;

81 
ª°¨tög
 = 
	`vmª°¨t_check
(&
m
);

82 
	`so·nŸify_check
();

83 if(
so·nŸify
)

84 
	`möix_∑nic
("so·nŸifyÇ⁄-NULL bef‹êª˚ivê(1)", 
NO_NUM
);

86 if(!
ª°¨tög
) {

87 
r
;

89 if(
so·nŸify
)

90 
	`möix_∑nic
("so·nŸifyÇ⁄-NULL bef‹êª˚ivê(2)", 
NO_NUM
);

91 if((
r
=
	`ª˚ive
(
ANY
, &
m
)Ë!
OK
)

92 
	`möix_∑nic
("ª˚ive(ËÁûed", 
r
);

93 if(
m
.
m_sour˚
 =
SYSTEM
)

95 if(
so·nŸify
)

96 
	`möix_∑nic
("so·nŸifyÇ⁄-NULLá·îÑe˚ive", 
NO_NUM
);

99 
sys_ˇŒ_code
 = (Ë
m
.
m_ty≥
;

100 
ˇŒ_ƒ
 = 
sys_ˇŒ_code
 - 
KERNEL_CALL
;

101 
who_e
 = 
m
.
m_sour˚
;

102 
	`okíd±
(
who_e
, &
who_p
);

103 
ˇŒî_±r
 = 
	`¥oc_addr
(
who_p
);

105 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

106 
sys_°©s
.
tŸÆ

	`add64u
(sys_stats.total, 1);

109 i‡(
ˇŒ_ƒ
 < 0 || cÆl_ƒ >
NR_SYS_CALLS
) {

110 #i‡
DEBUG_ENABLE_IPC_WARNINGS


111 
	`k¥ötf
("SYSTEM: illegalÑequest %d from %d.\n",

112 
ˇŒ_ƒ
,
m
.
m_sour˚
);

114 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

115 
sys_°©s
.
bad_ªq
++;

116 
ªsu…
 = 
EBADREQUEST
;

118 i‡(!
	`GET_BIT
(
	`¥iv
(
ˇŒî_±r
)->
s_k_ˇŒ_mask
, 
ˇŒ_ƒ
)) {

119 #i‡
DEBUG_ENABLE_IPC_WARNINGS


120 
cuº
0, 
limô
100, 
exåa
= 20;

122 i‡(
cuº
 < 
limô
+
exåa
)

124 
	`k¥ötf
("SYSTEM:Ñequest %d from %d denied.\n",

125 
ˇŒ_ƒ
, 
m
.
m_sour˚
);

126 } i‡(
cuº
 =
limô
+
exåa
)

128 
	`k¥ötf
("sys_task:Ço debug output forá while\n");

130 i‡(
cuº
 =2*
limô
-1)

131 
limô
 *= 2;

132 
cuº
++;

134 i‡(
ˇŒî_±r
->
p_ídpoöt
 =
ùc_°©s_èrgë
)

135 
sys_°©s
.
nŸ_Ælowed
++;

136 
ªsu…
 = 
ECALLDENIED
;

139 
ªsu…
 = (*
ˇŒ_vec
[
ˇŒ_ƒ
])(&
m
);

142 if(
ªsu…
 =
VMSUSPEND
) {

147 
	`mem˝y
(&
ˇŒî_±r
->
p_vmªque°
.
ßved
.
ªqmsg
, &
m
, (m));

148 
ˇŒî_±r
->
p_vmªque°
.
ty≥
 = 
VMSTYPE_SYS_MESSAGE
;

150 
	`k¥ötf
("SYSTEM: su•ídög cÆ»‰om %d\n", 
m
.
m_sour˚
);

152 } i‡(
ªsu…
 !
EDONTREPLY
) {

157 if(
ª°¨tög
)

158 
	`RTS_LOCK_UNSET
(
ª°¨tög
, 
VMREQUEST
);

159 
m
.
m_ty≥
 = 
ªsu…
;

160 if(
	`WILLRECEIVE
(
ˇŒî_±r
, 
SYSTEM
)) {

161 i‡(
OK
 !(
s
=
	`lock_£nd
(
m
.
m_sour˚
, &m))) {

162 
	`k¥ötf
("SYSTEM,ÑeplyÅo %d failed: %d\n",

163 
m
.
m_sour˚
, 
s
);

166 
	`k¥ötf
("SYSTEM:ÇotÑeplyingÅo %d;ÇotÑeady\n",

167 
ˇŒî_±r
->
p_ídpoöt
);

171 
	}
}

176 
PRIVATE
 
	$öôülize
()

178 
¥iv
 *
•
;

179 
i
;

182 
i
=0; i<
NR_IRQ_HOOKS
; i++) {

183 
úq_hooks
[
i
].
¥oc_ƒ_e
 = 
NONE
;

187 
•
=
BEG_PRIV_ADDR
; s∞< 
END_PRIV_ADDR
; sp++) {

188 
	`tmr_öôtimî
(&(
•
->
s_Æ¨m_timî
));

196 
i
=0; i<
NR_SYS_CALLS
; i++) {

197 
ˇŒ_vec
[
i
] = 
do_unu£d
;

198 
ˇŒ«mes
[
i
] = "unused";

202 
	`m≠
(
SYS_FORK
, 
do_f‹k
);

203 
	`m≠
(
SYS_EXEC
, 
do_exec
);

204 
	`m≠
(
SYS_EXIT
, 
do_exô
);

205 
	`m≠
(
SYS_NICE
, 
do_ni˚
);

206 
	`m≠
(
SYS_PRIVCTL
, 
do_¥iv˘l
);

207 
	`m≠
(
SYS_TRACE
, 
do_åa˚
);

208 
	`m≠
(
SYS_SETGRANT
, 
do_£tgø¡
);

211 
	`m≠
(
SYS_KILL
, 
do_kûl
);

212 
	`m≠
(
SYS_GETKSIG
, 
do_gëksig
);

213 
	`m≠
(
SYS_ENDKSIG
, 
do_ídksig
);

214 
	`m≠
(
SYS_SIGSEND
, 
do_sig£nd
);

215 
	`m≠
(
SYS_SIGRETURN
, 
do_sigªtu∫
);

218 
	`m≠
(
SYS_IRQCTL
, 
do_úq˘l
);

219 
	`m≠
(
SYS_DEVIO
, 
do_devio
);

220 
	`m≠
(
SYS_VDEVIO
, 
do_vdevio
);

223 
	`m≠
(
SYS_NEWMAP
, 
do_√wm≠
);

224 
	`m≠
(
SYS_SEGCTL
, 
do_£g˘l
);

225 
	`m≠
(
SYS_MEMSET
, 
do_mem£t
);

226 
	`m≠
(
SYS_VM_SETBUF
, 
do_vm_£tbuf
);

227 
	`m≠
(
SYS_VMCTL
, 
do_vm˘l
);

230 
	`m≠
(
SYS_UMAP
, 
do_um≠
);

231 
	`m≠
(
SYS_VIRCOPY
, 
do_vúc›y
);

232 
	`m≠
(
SYS_PHYSCOPY
, 
do_c›y
);

233 
	`m≠
(
SYS_VIRVCOPY
, 
do_vúvc›y
);

234 
	`m≠
(
SYS_PHYSVCOPY
, 
do_vc›y
);

235 
	`m≠
(
SYS_SAFECOPYFROM
, 
do_ß„c›y
);

236 
	`m≠
(
SYS_SAFECOPYTO
, 
do_ß„c›y
);

237 
	`m≠
(
SYS_VSAFECOPY
, 
do_vß„c›y
);

240 
	`m≠
(
SYS_TIMES
, 
do_times
);

241 
	`m≠
(
SYS_SETALARM
, 
do_£èœrm
);

242 
	`m≠
(
SYS_STIME
, 
do_°ime
);

245 
	`m≠
(
SYS_ABORT
, 
do_ab‹t
);

246 
	`m≠
(
SYS_GETINFO
, 
do_gëöfo
);

249 
	`m≠
(
SYS_SPROF
, 
do_•rofûe
);

250 
	`m≠
(
SYS_CPROF
, 
do_˝rofûe
);

251 
	`m≠
(
SYS_PROFBUF
, 
do_¥ofbuf
);

254 #i‡
_MINIX_CHIP
 =
_CHIP_INTEL


255 
	`m≠
(
SYS_INT86
, 
do_öt86
);

256 
	`m≠
(
SYS_READBIOS
, 
do_ªadbios
);

257 
	`m≠
(
SYS_IOPENABLE
, 
do_i›íabÀ
);

258 
	`m≠
(
SYS_SDEVIO
, 
do_sdevio
);

259 
	`m≠
(
SYS_MAPDMA
, 
do_m≠dma
);

261 
	}
}

266 
PUBLIC
 
	$gë_¥iv
(
rc
, 
¥oc_ty≥
)

267 
¥oc
 *
rc
;

268 
¥oc_ty≥
;

273 
¥iv
 *
•
;

275 i‡(
¥oc_ty≥
 =
SYS_PROC
) {

276 
•
 = 
BEG_PRIV_ADDR
; s∞< 
END_PRIV_ADDR
; ++sp)

277 i‡(
•
->
s_¥oc_ƒ
 =
NONE
 && sp->
s_id
 !
USER_PRIV_ID
) ;

278 i‡(
•
 >
END_PRIV_ADDR
Ë(
ENOSPC
);

279 
rc
->
p_¥iv
 = 
•
;

280 
rc
->
p_¥iv
->
s_¥oc_ƒ
 = 
	`¥oc_ƒ
(rc);

281 
rc
->
p_¥iv
->
s_Êags
 = 
SYS_PROC
;

284 
•
->
s_asy¡ab
= -1;

285 
•
->
s_asynsize
= 0;

287 
rc
->
p_¥iv
 = &
¥iv
[
USER_PRIV_ID
];

288 
rc
->
p_¥iv
->
s_¥oc_ƒ
 = 
INIT_PROC_NR
;

292 (
OK
);

293 
	}
}

298 
PUBLIC
 
	$gë_øndom√ss
(
sour˚
)

299 
sour˚
;

304 
r_√xt
;

305 
tsc_high
, 
tsc_low
;

307 
sour˚
 %
RANDOM_SOURCES
;

308 
r_√xt

køndom
.
bö
[
sour˚
].r_next;

309 
	`ªad_tsc
(&
tsc_high
, &
tsc_low
);

310 
køndom
.
bö
[
sour˚
].
r_buf
[
r_√xt
] = 
tsc_low
;

311 i‡(
køndom
.
bö
[
sour˚
].
r_size
 < 
RANDOM_ELEMENTS
) {

312 
køndom
.
bö
[
sour˚
].
r_size
 ++;

314 
køndom
.
bö
[
sour˚
].
r_√xt
 = (r_√xà+ 1 ) % 
RANDOM_ELEMENTS
;

315 
	}
}

320 
PUBLIC
 
	$£nd_sig
(
¥oc_ƒ
, 
sig_ƒ
)

326 
¥oc
 *
Ω
;

327 
n
;

329 if(!
	`isok¥o˙
(
¥oc_ƒ
Ë|| 
	`i£m±yn
(proc_nr))

330 
	`möix_∑nic
("£nd_sigÅÿem±yÖro˚ss", 
¥oc_ƒ
);

332 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

333 
	`sigadd£t
(&
	`¥iv
(
Ω
)->
s_sig_≥ndög
, 
sig_ƒ
);

334 
	`so·_nŸify
(
Ω
->
p_ídpoöt
);

335 
	}
}

340 
PUBLIC
 
	$ˇu£_sig
(
¥oc_ƒ
, 
sig_ƒ
)

341 
¥oc_ƒ
;

342 
sig_ƒ
;

357 
¥oc
 *
Ω
;

359 i‡(
¥oc_ƒ
 =
PM_PROC_NR
)

360 
	`möix_∑nic
("ˇu£_sig: PM gë†sig«l", 
NO_NUM
);

363 
Ω
 = 
	`¥oc_addr
(
¥oc_ƒ
);

364 i‡(! 
	`sigismembî
(&
Ω
->
p_≥ndög
, 
sig_ƒ
)) {

365 
	`sigadd£t
(&
Ω
->
p_≥ndög
, 
sig_ƒ
);

366 i‡(! (
	`RTS_ISSET
(
Ω
, 
SIGNALED
))) {

367 
	`RTS_LOCK_SET
(
Ω
, 
SIGNALED
 | 
SIG_PENDING
);

368 
	`£nd_sig
(
PM_PROC_NR
, 
SIGKSIG
);

371 
	}
}

373 #i‡
_MINIX_CHIP
 =
_CHIP_INTEL


378 
PUBLIC
 
phys_byãs
 
	$um≠_bios
(
vú_addr
, 
byãs
)

379 
vú_byãs
 
vú_addr
;

380 
vú_byãs
 
byãs
;

390 i‡(
vú_addr
 >
BIOS_MEM_BEGIN
 && vú_add∏+ 
byãs
 <
BIOS_MEM_END
)

391  (
phys_byãs
Ë
vú_addr
;

392 i‡(
vú_addr
 >
BASE_MEM_TOP
 && vú_add∏+ 
byãs
 <
UPPER_MEM_END
)

393  (
phys_byãs
Ë
vú_addr
;

395 
	`k¥ötf
("W¨nög,Éº‹ i¿um≠_bios, vútuÆáddªs†0x%x\n", 
vú_addr
);

397 
	}
}

403 
PUBLIC
 
phys_byãs
 
	$um≠_gø¡
(
Ω
, 
gø¡
, 
byãs
)

404 
¥oc
 *
Ω
;

405 
˝_gø¡_id_t
 
gø¡
;

406 
vú_byãs
 
byãs
;

408 
¥oc_ƒ
;

409 
vú_byãs
 
off£t
, 
ªt
;

410 
ídpoöt_t
 
gø¡î
;

418 if(
	`vîify_gø¡
(
Ω
->
p_ídpoöt
, 
ANY
, 
gø¡
, 
byãs
, 0, 0,

419 &
off£t
, &
gø¡î
Ë!
OK
) {

420 
	`k¥ötf
("SYSTEM: umap_grant: verify_grant failed\n");

424 if(!
	`isokíd±
(
gø¡î
, &
¥oc_ƒ
)) {

425 
	`k¥ötf
("SYSTEM: umap_grant: isokendpt failed\n");

430 
ªt
 = 
	`um≠_vútuÆ
(
	`¥oc_addr
(
¥oc_ƒ
), 
D
, 
off£t
, 
byãs
);

431 if(!
ªt
) {

432 
	`k¥ötf
("SYSTEM:umap_grant:umap_virtual failed; grant %s:%d -> %s: vir 0x%lx\n",

433 
Ω
->
p_«me
, 
gø¡
,

434 
	`¥oc_addr
(
¥oc_ƒ
)->
p_«me
, 
off£t
);

436  
ªt
;

437 
	}
}

442 
PUBLIC
 
	$˛ór_ídpoöt
(
rc
)

443 
¥oc
 *
rc
;

445 
¥oc
 *
Ω
;

446 
¥oc
 **
xµ
;

447 
¥oc
 *
≈
;

449 if(
	`i£m±yp
(
rc
)Ë
	`möix_∑nic
("˛ór_¥oc:Ém±yÖro˚ss", 
	`¥oc_ƒ
(rc));

452 if(
rc
->
p_ídpoöt
 =
PM_PROC_NR
 ||Ñc->p_ídpoöà=
VFS_PROC_NR
) {

456 
	`k¥ötf
("¥o˚s†%†/ %d dõd; sèck: ", 
rc
->
p_«me
,Ñc->
p_ídpoöt
);

457 
	`¥oc_°ackåa˚
(
rc
);

458 
	`k¥ötf
("kernelÅrace: ");

459 
	`utû_°ackåa˚
();

460 
	`möix_∑nic
("˛ór_¥oc: sy°emÖro˚s†dõd", 
rc
->
p_ídpoöt
);

465 
	`RTS_LOCK_SET
(
rc
, 
NO_ENDPOINT
);

466 i‡(
	`¥iv
(
rc
)->
s_Êags
 & 
SYS_PROC
)

468 i‡(
	`¥iv
(
rc
)->
s_asynsize
)

469 
	`k¥ötf
("clear_endpoint: clearing s_asynsize\n");

470 
	`¥iv
(
rc
)->
s_asynsize
= 0;

476 i‡(
	`RTS_ISSET
(
rc
, 
SENDING
)) {

477 
èrgë_¥oc
;

479 
	`okíd±
(
rc
->
p_£ndto_e
, &
èrgë_¥oc
);

480 
xµ
 = &
	`¥oc_addr
(
èrgë_¥oc
)->
p_ˇŒî_q
;

481 *
xµ
 !
NIL_PROC
) {

482 i‡(*
xµ
 =
rc
) {

483 *
xµ
 = (*xµ)->
p_q_lök
;

484 #i‡
DEBUG_ENABLE_IPC_WARNINGS


485 
	`k¥ötf
("Proc %dÑemoved from queueát %d\n",

486 
	`¥oc_ƒ
(
rc
),Ñc->
p_£ndto_e
);

490 
xµ
 = &(*xµ)->
p_q_lök
;

492 
rc
->
p_πs_Êags
 &~
SENDING
;

494 
rc
->
p_πs_Êags
 &~
RECEIVING
;

500 
Ω
 = 
BEG_PROC_ADDR
;Ñ∞< 
END_PROC_ADDR
;Ñp++) {

501 if(
	`i£m±yp
(
Ω
))

505 
	`un£t_sys_bô
(
	`¥iv
(
Ω
)->
s_nŸify_≥ndög
,Öriv(
rc
)->
s_id
);

508 i‡(
	`RTS_ISSET
(
Ω
, 
RECEIVING
Ë&&Ñp->
p_gë‰om_e
 =
rc
->
p_ídpoöt
) {

509 
Ω
->
p_ªg
.
ªåeg
 = 
ESRCDIED
;

510 
	`RTS_LOCK_UNSET
(
Ω
, 
RECEIVING
);

511 #i‡
DEBUG_ENABLE_IPC_WARNINGS


512 
	`k¥ötf
("Proc %d (%s)Ñeceiving from dead src %d (%s)\n",

513 
	`¥oc_ƒ
(
Ω
),Ñp->
p_«me
,Öroc_ƒ(
rc
),Ñc->p_name);

516 i‡(
	`RTS_ISSET
(
Ω
, 
SENDING
) &&

517 
Ω
->
p_£ndto_e
 =
rc
->
p_ídpoöt
) {

518 
Ω
->
p_ªg
.
ªåeg
 = 
EDSTDIED
;

519 
	`RTS_LOCK_UNSET
(
Ω
, 
SENDING
);

520 #i‡
DEBUG_ENABLE_IPC_WARNINGS


521 
	`k¥ötf
("Proc %d (%s) sendÅo dying dst %d (%s)\n",

522 
	`¥oc_ƒ
(
Ω
),Ñp->
p_«me
,Öroc_ƒ(
rc
),Ñc->p_name);

528 
≈
 = 
so·nŸify
;Çp;Ç∞≈->
√xt_so·_nŸify
) {

529 if(
≈
 =
rc
) {

530 
	`möix_∑nic
("dyögÖro¯wa†⁄Çext_so·_nŸify", 
≈
->
p_ídpoöt
);

533 
	}
}

538 
PUBLIC
 
phys_byãs
 
	$um≠_vîify_gø¡
(
Ω
, 
gø¡ì
, 
gø¡
, 
off£t
, 
byãs
, 
ac˚ss
)

539 
¥oc
 *
Ω
;

540 
ídpoöt_t
 
gø¡ì
;

541 
˝_gø¡_id_t
 
gø¡
;

542 
vú_byãs
 
off£t
;

543 
vú_byãs
 
byãs
;

544 
ac˚ss
;

546 
¥oc_ƒ
;

547 
vú_byãs
 
v_off£t
;

548 
ídpoöt_t
 
gø¡î
;

556 if(
	`vîify_gø¡
(
Ω
->
p_ídpoöt
, 
gø¡ì
, 
gø¡
, 
byãs
, 
ac˚ss
, 
off£t
,

557 &
v_off£t
, &
gø¡î
Ë!
OK


558 || !
	`isokíd±
(
gø¡î
, &
¥oc_ƒ
)) {

563  
	`um≠_vútuÆ
(
	`¥oc_addr
(
¥oc_ƒ
), 
D
, 
v_off£t
, 
byãs
);

564 
	}
}

569 
PRIVATE
 
	$so·nŸify_check
()

571 
¥oc
 *
≈
, *
√xäp
;

573 if(!
so·nŸify
)

576 
≈
 = 
so·nŸify
;Çp;Ç∞
√xäp
) {

577 if(!
≈
->
p_so·nŸifõd
)

578 
	`möix_∑nic
("so·nŸify buànÿp_so·nŸifõd", 
NO_NUM
);

579 
	`lock_nŸify
(
SYSTEM
, 
≈
->
p_ídpoöt
);

580 
√xäp
 = 
≈
->
√xt_so·_nŸify
;

581 
≈
->
√xt_so·_nŸify
 = 
NULL
;

582 
≈
->
p_so·nŸifõd
 = 0;

585 
so·nŸify
 = 
NULL
;

586 
	}
}

591 
PRIVATE
 
¥oc
 *
	$vmª°¨t_check
(
mesßge
 *
m
)

593 
ty≥
, 
r
;

594 
¥oc
 *
ª°¨tög
;

598 if(!(
ª°¨tög
 = 
vmª°¨t
))

599  
NULL
;

601 if(
ª°¨tög
->
p_πs_Êags
 & 
SLOT_FREE
)

602 
	`möix_∑nic
("SYSTEM: VMREQUEST së f‹Ém±yÖro˚ss", 
NO_NUM
);

604 
ty≥
 = 
ª°¨tög
->
p_vmªque°
.type;

605 
ª°¨tög
->
p_vmªque°
.
ty≥
 = 
VMSTYPE_SYS_NONE
;

606 
vmª°¨t
 = 
ª°¨tög
->
p_vmªque°
.
√xåe°¨t
;

608 if(!
	`RTS_ISSET
(
ª°¨tög
, 
VMREQUEST
))

609 
	`möix_∑nic
("SYSTEM: VMREQUESTÇot set forÖrocess on vmrestart queue",

610 
ª°¨tög
->
p_ídpoöt
);

612 
ty≥
) {

613 
VMSTYPE_SYS_MESSAGE
:

614 
	`mem˝y
(
m
, &
ª°¨tög
->
p_vmªque°
.
ßved
.
ªqmsg
, (*m));

616 
	`k¥ötf
("SYSTEM:Ñestart sys_messageÅype %d / %lx source %d\n",

617 
m
->
m_ty≥
, m->m_ty≥, m->
m_sour˚
);

619 if(
m
->
m_sour˚
 !
ª°¨tög
->
p_ídpoöt
)

620 
	`möix_∑nic
("SYSTEM: vmrestart source doesn't match",

621 
NO_NUM
);

623 if(!
	`isokíd±
(
m
->
m_sour˚
, &
who_p
)) {

624 
	`k¥ötf
("SYSTEM: ignoring call %d from dead %d\n",

625 
m
->
m_ty≥
, m->
m_sour˚
);

626  
NULL
;

628 { 
i
;

629 
i
 = 
m
->
m_ty≥
 - 
KERNEL_CALL
;

630 if(
i
 >0 && i < 
NR_SYS_CALLS
) {

632 
	`k¥ötf
("SYSTEM:Ñestart %s from %d\n",

633 
ˇŒ«mes
[
i
], 
m
->
m_sour˚
);

636 
	`möix_∑nic
("ˇŒÇumbî ouào‡ønge", 
i
);

639  
ª°¨tög
;

640 
VMSTYPE_SYS_CALL
:

641 
	`k¥ötf
("SYSTEM:Ñestart sys_call\n");

643 
	`sys_ˇŒ_ª°¨t
(
ª°¨tög
);

646  
NULL
;

647 
VMSTYPE_MSGCOPY
:

649 if((
r
=
	`d©a_c›y
(
SYSTEM
,

650 (
vú_byãs
Ë&
ª°¨tög
->
p_vmªque°
.
ßved
.
msgc›y
.
msgbuf
,

651 
ª°¨tög
->
p_vmªque°
.
ßved
.
msgc›y
.
d°
->
p_ídpoöt
,

652 (
vú_byãs
Ë
ª°¨tög
->
p_vmªque°
.
ßved
.
msgc›y
.
d°_v
,

653 (
mesßge
))Ë!
OK
) {

654 
	`möix_∑nic
("SYSTEM: dñayed msgc›y faûed", 
r
);

656 
	`RTS_LOCK_UNSET
(
ª°¨tög
, 
VMREQUEST
);

659  
NULL
;

661 
	`möix_∑nic
("°øngêª°¨àty≥", 
ty≥
);

663 
	`möix_∑nic
("„Œ ouào‡swôch", 
NO_NUM
);

664 
	}
}

	@system.h

30 #i‚de‡
SYSTEM_H


31 
	#SYSTEM_H


	)

34 
	~"debug.h
"

35 
	~"kî√l.h
"

36 
	~"¥Ÿo.h
"

37 
	~"¥oc.h
"

40 
_PROTOTYPE
–
do_unu£d
, (
mesßge
 *
m_±r
) );

42 
_PROTOTYPE
–
do_exec
, (
mesßge
 *
m_±r
) );

43 #i‡! 
USE_EXEC


44 
	#do_exec
 
do_unu£d


	)

47 
_PROTOTYPE
–
do_f‹k
, (
mesßge
 *
m_±r
) );

48 #i‡! 
USE_FORK


49 
	#do_f‹k
 
do_unu£d


	)

52 
_PROTOTYPE
–
do_√wm≠
, (
mesßge
 *
m_±r
) );

53 #i‡! 
USE_NEWMAP


54 
	#do_√wm≠
 
do_unu£d


	)

57 
_PROTOTYPE
–
do_exô
, (
mesßge
 *
m_±r
) );

58 #i‡! 
USE_EXIT


59 
	#do_exô
 
do_unu£d


	)

62 
_PROTOTYPE
–
do_åa˚
, (
mesßge
 *
m_±r
) );

63 #i‡! 
USE_TRACE


64 
	#do_åa˚
 
do_unu£d


	)

67 
_PROTOTYPE
–
do_ni˚
, (
mesßge
 *
m_±r
) );

68 #i‡! 
USE_NICE


69 
	#do_ni˚
 
do_unu£d


	)

72 
_PROTOTYPE
–
do_c›y
, (
mesßge
 *
m_±r
) );

73 
	#do_vúc›y
 
do_c›y


	)

74 #i‡! (
USE_VIRCOPY
 || 
USE_PHYSCOPY
)

75 
	#do_c›y
 
do_unu£d


	)

78 
_PROTOTYPE
–
do_vc›y
, (
mesßge
 *
m_±r
) );

79 
	#do_vúvc›y
 
do_vc›y


	)

80 #i‡! (
USE_VIRVCOPY
 || 
USE_PHYSVCOPY
)

81 
	#do_vc›y
 
do_unu£d


	)

84 
_PROTOTYPE
–
do_um≠
, (
mesßge
 *
m_±r
) );

85 #i‡! 
USE_UMAP


86 
	#do_um≠
 
do_unu£d


	)

89 
_PROTOTYPE
–
do_mem£t
, (
mesßge
 *
m_±r
) );

90 #i‡! 
USE_MEMSET


91 
	#do_mem£t
 
do_unu£d


	)

94 
_PROTOTYPE
–
do_vm_£tbuf
, (
mesßge
 *
m_±r
) );

95 
_PROTOTYPE
–
do_vm_m≠
, (
mesßge
 *
m_±r
) );

97 
_PROTOTYPE
–
do_ab‹t
, (
mesßge
 *
m_±r
) );

98 #i‡! 
USE_ABORT


99 
	#do_ab‹t
 
do_unu£d


	)

102 
_PROTOTYPE
–
do_gëöfo
, (
mesßge
 *
m_±r
) );

103 #i‡! 
USE_GETINFO


104 
	#do_gëöfo
 
do_unu£d


	)

107 
_PROTOTYPE
–
do_¥iv˘l
, (
mesßge
 *
m_±r
) );

108 #i‡! 
USE_PRIVCTL


109 
	#do_¥iv˘l
 
do_unu£d


	)

112 
_PROTOTYPE
–
do_£g˘l
, (
mesßge
 *
m_±r
) );

113 #i‡! 
USE_SEGCTL


114 
	#do_£g˘l
 
do_unu£d


	)

117 
_PROTOTYPE
–
do_úq˘l
, (
mesßge
 *
m_±r
) );

118 #i‡! 
USE_IRQCTL


119 
	#do_úq˘l
 
do_unu£d


	)

122 
_PROTOTYPE
–
do_devio
, (
mesßge
 *
m_±r
) );

123 #i‡! 
USE_DEVIO


124 
	#do_devio
 
do_unu£d


	)

127 
_PROTOTYPE
–
do_vdevio
, (
mesßge
 *
m_±r
) );

128 #i‡! 
USE_VDEVIO


129 
	#do_vdevio
 
do_unu£d


	)

132 
_PROTOTYPE
–
do_öt86
, (
mesßge
 *
m_±r
) );

134 
_PROTOTYPE
–
do_sdevio
, (
mesßge
 *
m_±r
) );

135 #i‡! 
USE_SDEVIO


136 
	#do_sdevio
 
do_unu£d


	)

139 
_PROTOTYPE
–
do_kûl
, (
mesßge
 *
m_±r
) );

140 #i‡! 
USE_KILL


141 
	#do_kûl
 
do_unu£d


	)

144 
_PROTOTYPE
–
do_gëksig
, (
mesßge
 *
m_±r
) );

145 #i‡! 
USE_GETKSIG


146 
	#do_gëksig
 
do_unu£d


	)

149 
_PROTOTYPE
–
do_ídksig
, (
mesßge
 *
m_±r
) );

150 #i‡! 
USE_ENDKSIG


151 
	#do_ídksig
 
do_unu£d


	)

154 
_PROTOTYPE
–
do_sig£nd
, (
mesßge
 *
m_±r
) );

155 #i‡! 
USE_SIGSEND


156 
	#do_sig£nd
 
do_unu£d


	)

159 
_PROTOTYPE
–
do_sigªtu∫
, (
mesßge
 *
m_±r
) );

160 #i‡! 
USE_SIGRETURN


161 
	#do_sigªtu∫
 
do_unu£d


	)

164 
_PROTOTYPE
–
do_times
, (
mesßge
 *
m_±r
) );

165 #i‡! 
USE_TIMES


166 
	#do_times
 
do_unu£d


	)

169 
_PROTOTYPE
–
do_£èœrm
, (
mesßge
 *
m_±r
) );

170 #i‡! 
USE_SETALARM


171 
	#do_£èœrm
 
do_unu£d


	)

174 
_PROTOTYPE
–
do_°ime
, (
mesßge
 *
m_±r
) );

176 
_PROTOTYPE
–
do_ß„c›y
, (
mesßge
 *
m_±r
) );

177 
_PROTOTYPE
–
do_vß„c›y
, (
mesßge
 *
m_±r
) );

178 
_PROTOTYPE
–
do_i›íabÀ
, (
mesßge
 *
m_±r
) );

179 
_PROTOTYPE
–
do_vm˘l
, (
mesßge
 *
m_±r
) );

180 
_PROTOTYPE
–
do_£tgø¡
, (
mesßge
 *
m_±r
) );

181 
_PROTOTYPE
–
do_ªadbios
, (
mesßge
 *
m_±r
) );

182 
_PROTOTYPE
–
do_m≠dma
, (
mesßge
 *
m_±r
) );

184 
_PROTOTYPE
–
do_•rofûe
, (
mesßge
 *
m_±r
) );

185 #i‡! 
SPROFILE


186 
	#do_•rofûe
 
do_unu£d


	)

189 
_PROTOTYPE
–
do_˝rofûe
, (
mesßge
 *
m_±r
) );

190 #i‡! 
CPROFILE


191 
	#do_˝rofûe
 
do_unu£d


	)

194 
_PROTOTYPE
–
do_¥ofbuf
, (
mesßge
 *
m_±r
) );

195 #i‡! 
CPROFILE


196 
	#do_¥ofbuf
 
do_unu£d


	)

199 
_PROTOTYPE
–
do_m≠dma
, (
mesßge
 *
m_±r
) );

	@table.c

29 
	#_TABLE


	)

31 
	~"kî√l.h
"

32 
	~"¥oc.h
"

33 
	~"ùc.h
"

34 
	~<möix/com.h
>

37 
	#NO_STACK
 0

	)

38 
	#SMALL_STACK
 (256 * (*))

	)

39 
	#IDL_S
 
SMALL_STACK


	)

40 
	#HRD_S
 
NO_STACK


	)

41 
	#TSK_S
 
SMALL_STACK


	)

44 
	#TOT_STACK_SPACE
 (
IDL_S
 + 
HRD_S
 + (2 * 
TSK_S
))

	)

45 
PUBLIC
 *
	gt_°ack
[
TOT_STACK_SPACE
 / (*)];

48 
	#IDL_F
 (
SYS_PROC
 | 
PREEMPTIBLE
 | 
BILLABLE
Ë

	)

49 
	#TSK_F
 (
SYS_PROC
Ë

	)

50 
	#SRV_F
 (
SYS_PROC
 | 
PREEMPTIBLE
Ë

	)

51 
	#USR_F
 (
BILLABLE
 | 
PREEMPTIBLE
Ë

	)

56 
	#TSK_T
 (1 << 
RECEIVE
Ë

	)

57 
	#SRV_T
 (~0Ë

	)

58 
	#USR_T
 ((1 << 
SENDREC
)Ë

	)

67 
	#s
(
n
Ë(1 << (
	`s_ƒ_to_id
“)))

	)

68 
	#NUL_M
 0

	)

69 
	#SRV_M
 (~0)

	)

70 
	#SYS_M
 (~0)

	)

71 
	#USR_M
 (
	`s
(
PM_PROC_NR
Ë| s(
FS_PROC_NR
Ë| s(
RS_PROC_NR
Ë| s(
SYSTEM
) | \

72 
	`s
(
VM_PROC_NR
))

	)

73 
	#DRV_M
 (
USR_M
 | 
	`s
(
SYSTEM
Ë| s(
CLOCK
Ë| s(
DS_PROC_NR
Ë| s(
LOG_PROC_NR
Ë| s(
TTY_PROC_NR
))

	)

83 
	#FS_C
 
SYS_KILL
, 
SYS_VIRCOPY
, 
SYS_SAFECOPYFROM
, 
SYS_SAFECOPYTO
, \

84 
SYS_VIRVCOPY
, 
SYS_UMAP
, 
SYS_GETINFO
, 
SYS_EXIT
, 
SYS_TIMES
, 
SYS_SETALARM
, \

85 
SYS_PRIVCTL
, 
SYS_TRACE
 , 
SYS_SETGRANT
, 
SYS_PROFBUF


	)

86 
	#DRV_C
 
FS_C
, 
SYS_SEGCTL
, 
SYS_IRQCTL
, 
SYS_INT86
, 
SYS_DEVIO
, \

87 
SYS_SDEVIO
, 
SYS_VDEVIO
, 
SYS_SETGRANT
, 
SYS_PROFBUF


	)

89 
PRIVATE
 

90 
	gfs_c
[] = { 
FS_C
 },

91 
	gpm_c
[] = { 
SYS_ALL_CALLS
 },

92 
	grs_c
[] = { 
SYS_ALL_CALLS
 },

93 
	gds_c
[] = { 
SYS_ALL_CALLS
 },

94 
	gvm_c
[] = { 
SYS_ALL_CALLS
 },

95 
	gdrv_c
[] = { 
DRV_C
 },

96 
	gây_c
[] = { 
DRV_C
, 
SYS_PHYSCOPY
, 
SYS_ABORT
, 
SYS_IOPENABLE
,

97 
SYS_READBIOS
 },

98 
	gmem_c
[] = { 
DRV_C
, 
SYS_PHYSCOPY
, 
SYS_PHYSVCOPY
, 
SYS_IOPENABLE
 };

110 
	#c
(
ˇŒs
ËˇŒs, ((ˇŒsË/ ((ˇŒs)[0]))

	)

111 
	#no_c
 { 0 }, 0

	)

113 
PUBLIC
 
boŸ_image
 
	gimage
[] = {

115 {
IDLE
, 
idÀ_èsk
,
IDL_F
, 8, 
IDLE_Q
, 
IDL_S
, 0, 0, 
no_c
,"idle" },

116 {
CLOCK
,
˛ock_èsk
,
TSK_F
, 8, 
TASK_Q
, 
TSK_S
, 
TSK_T
, 0, 
no_c
,"clock" },

117 {
SYSTEM
, 
sys_èsk
,
TSK_F
, 8, 
TASK_Q
, 
TSK_S
, 
TSK_T
, 0, 
no_c
,"system"},

118 {
HARDWARE
, 0,
TSK_F
, 8, 
TASK_Q
, 
HRD_S
, 0, 0, 
no_c
,"kernel"},

119 {
PM_PROC_NR
, 0,
SRV_F
, 32, 3, 0, 
SRV_T
, 
SRV_M
, 
c
(
pm_c
),"pm" },

120 {
FS_PROC_NR
, 0,
SRV_F
, 32, 4, 0, 
SRV_T
, 
SRV_M
, 
c
(
fs_c
),"vfs" },

121 {
RS_PROC_NR
, 0,
SRV_F
, 4, 3, 0, 
SRV_T
, 
SYS_M
, 
c
(
rs_c
),"rs" },

122 {
DS_PROC_NR
, 0,
SRV_F
, 4, 3, 0, 
SRV_T
, 
SYS_M
, 
c
(
ds_c
),"ds" },

123 {
TTY_PROC_NR
, 0,
SRV_F
, 4, 1, 0, 
SRV_T
, 
SYS_M
,
c
(
ây_c
),"tty" },

124 {
MEM_PROC_NR
, 0,
SRV_F
, 4, 2, 0, 
SRV_T
, 
SYS_M
,
c
(
mem_c
),"memory"},

125 {
LOG_PROC_NR
, 0,
SRV_F
, 4, 2, 0, 
SRV_T
, 
SYS_M
,
c
(
drv_c
),"log" },

126 {
MFS_PROC_NR
, 0,
SRV_F
, 32, 4, 0, 
SRV_T
, 
SRV_M
, 
c
(
fs_c
),"mfs" },

127 {
VM_PROC_NR
, 0,
SRV_F
, 32, 3, 0, 
SRV_T
, 
SRV_M
, 
c
(
vm_c
),"vm" },

128 {
INIT_PROC_NR
, 0,
USR_F
, 8, 
USER_Q
, 0, 
USR_T
, 
USR_M
, 
no_c
,"init" },

138 
dummy
[(
NR_BOOT_PROCS
==(
image
)/

139 (
boŸ_image
))?1:-1];

140 
dummy
[(
BITCHUNK_BITS
 > 
NR_BOOT_PROCS
 - 1) ? 1 : -1];

142 
PUBLIC
 
ídpoöt_t
 
	gùc_°©s_èrgë

NONE
;

	@type.h

1 #i‚de‡
TYPE_H


2 
	#TYPE_H


	)

4 
	~<möix/com.h
>

6 
_PROTOTYPE
–
	tèsk_t
, () );

9 
	t¥oc_ƒ_t
;

10 
	tsys_id_t
;

12 
bôchunk_t
 
	mchunk
[
BITMAP_CHUNKS
(
NR_SYS_PROCS
)];

13 } 
	tsys_m≠_t
;

15 
	sboŸ_image
 {

16 
¥oc_ƒ_t
 
	m¥oc_ƒ
;

17 
èsk_t
 *
	möôül_pc
;

18 
	mÊags
;

19 
	mqu™tum
;

20 
	m¥i‹ôy
;

21 
	m°ksize
;

22 
	må≠_mask
;

23 
bôchunk_t
 
	mùc_to
;

24 *
	mk_ˇŒs
;

25 
	mƒ_k_ˇŒs
;

26 
	m¥oc_«me
[
P_NAME_LEN
];

27 
ídpoöt_t
 
	mídpoöt
;

30 
	søndom√ss
 {

32 
	mr_√xt
;

33 
	mr_size
;

34 
	mr_buf
[
RANDOM_ELEMENTS
];

35 } 
	mbö
[
RANDOM_SOURCES
];

38 
	túq_pﬁicy_t
;

39 
	túq_id_t
;

41 
	súq_hook
 {

42 
úq_hook
 *
	m√xt
;

43 (*
	mh™dÀr
)(
	múq_hook
 *);

44 
	múq
;

45 
	mid
;

46 
	m¥oc_ƒ_e
;

47 
úq_id_t
 
	mnŸify_id
;

48 
úq_pﬁicy_t
 
	mpﬁicy
;

49 } 
	túq_hook_t
;

51 (*
	túq_h™dÀr_t
)(
	túq_hook
 *);

54 
	slock_timögd©a
 {

55 
«mes
[
TIMING_NAME
];

56 
lock_timögs
[
TIMING_POINTS
];

57 
lock_timögs_ønge
[2];

58 
bösize
, 
ª£ts
, 
mis£s
, 
mósuªmíts
;

60 
EXTERN
 
lock_timögd©a
 
timögd©a
[
TIMING_CATEGORIES
];

	@utility.c

7 
	~"kî√l.h
"

8 
	~"¥oc.h
"

10 
	~<uni°d.h
>

11 
	~<sig«l.h
>

12 
	~<°rög.h
>

14 
	~<möix/sysutû.h
>

15 
	~<möix/sys_c⁄fig.h
>

20 
PUBLIC
 
	$möix_∑nic
(
mess
,
ƒ
)

21 *
mess
;

22 
ƒ
;

25 i‡(
möix_∑nicög
 ++) ;

27 i‡(
mess
 !
NULL
) {

28 
	`k¥ötf
("kî√»∑nic: %s", 
mess
);

29 if(
ƒ
 !
NO_NUM
)

30 
	`k¥ötf
(" %d", 
ƒ
);

31 
	`k¥ötf
("\n");

32 
	`k¥ötf
("kernel stacktrace: ");

33 
	`utû_°ackåa˚
();

37 
	`möix_shutdown
(
NULL
);

38 
	}
}

43 
	#¥ötf
 
k¥ötf


	)

44 
	~"../lib/sysutû/k¥ötf.c
"

46 
	#END_OF_KMESS
 0

	)

51 
PUBLIC
 
	$kputc
(
c
)

52 
c
;

57 i‡(
c
 !
END_OF_KMESS
) {

58 i‡(
do_£rül_debug
) {

59 if(
c
 == '\n')

60 
	`£r_putc
('\r');

61 
	`£r_putc
(
c
);

63 
kmess
.
km_buf
[kmess.
km_√xt
] = 
c
;

64 i‡(
kmess
.
km_size
 < (kmess.
km_buf
))

65 
kmess
.
km_size
 += 1;

66 
kmess
.
km_√xt
 = (kmess.km_√xà+ 1Ë% 
_KMESS_BUF_SIZE
;

68 
p
, 
ouçrocs
[] = 
OUTPUT_PROCS_ARRAY
;

69 if(
möix_∑nicög
) ;

70 
p
 = 0; 
ouçrocs
[p] !
NONE
;Ö++) {

71 if(
	`isok¥o˙
(
ouçrocs
[
p
]Ë&& !
	`i£m±yn
(outprocs[p])) {

72 
	`£nd_sig
(
ouçrocs
[
p
], 
SIGKMESS
);

76 
	}
}

	@vm.h

2 #i‚de‡
_VM_H


3 
	#_VM_H
 1

	)

5 
	#CHECKRANGE_OR_SUSPEND
(
¥
, 
°¨t
, 
Àngth
, 
wr
Ë{ 
mr
; \

6 if(
vm_ru¬ög
 && (
mr
=
	`vm_checkønge
(
	`¥oc_addr
(
who_p
), 
¥
, 
°¨t
, 
Àngth
, 
wr
, 0)Ë!
OK
) { \

7  
mr
; \

8 } }

	)

10 
	#CHECKRANGE
(
¥
, 
°¨t
, 
Àngth
, 
wr
) \

11 
	`vm_checkønge
(
	`¥oc_addr
(
who_p
), 
¥
, 
°¨t
, 
Àngth
, 
wr
, 1)

	)

16 
	#VMSUSPEND
 -996

	)

	@../lib/sysutil/kprintf.c

4 
	#nû
 0

	)

5 
	~<°d¨g.h
>

6 
	~<°ddef.h
>

7 
	~<limôs.h
>

9 
	#isdigô
(
c
Ë((Ë((cË- '0'Ë< (Ë10)

	)

11 #i‡!
__STDC__


13 
kputc
();

14 
	$¥ötf
(
fmt
) *fmt;

18 
	`kputc
(
c
);

20 
	#cou¡_kputc
(
c
Ëdÿ{ 
ch¨cou¡
++; 
	`kputc
(c); 
	}
} 0)

	)

22 
	$¥ötf
(c⁄° *
fmt
, ...)

25 
c
, 
ch¨cou¡
 = 0;

26 íum { 
LEFT
, 
RIGHT
 } 
adju°
;

27 íum { 
LONG
, 
INT
 } 
ötsize
;

28 
fûl
;

29 
width
, 
max
, 
Àn
, 
ba£
;

30 
X2C_èb
[]= "0123456789ABCDEF";

31 
x2c_èb
[]= "0123456789abcdef";

32 *
x2c
;

33 *
p
;

34 
i
;

35 
u
;

36 
ãmp
[8 * () / 3 + 2];

38 
va_li°
 
¨gp
;

40 
	`va_°¨t
(
¨gp
, 
fmt
);

42 (
c
*
fmt
++) != 0) {

43 i‡(
c
 != '%') {

45 
	`cou¡_kputc
(
c
);

52 
c
*
fmt
++;

54 
adju°

RIGHT
;

55 i‡(
c
 == '-') {

56 
adju°

LEFT
;

57 
c
*
fmt
++;

60 
fûl
= ' ';

61 i‡(
c
 == '0') {

62 
fûl
= '0';

63 
c
*
fmt
++;

66 
width
= 0;

67 i‡(
c
 == '*') {

69 
width

	`va_¨g
(
¨gp
, );

70 
c
*
fmt
++;

72 i‡(
	`isdigô
(
c
)) {

75 
width
width * 10 + (
c
 - '0');

76 } 
	`isdigô
(
c
*
fmt
++));

79 
max

INT_MAX
;

80 i‡(
c
 == '.') {

82 i‡((
c
*
fmt
++) == '*') {

83 
max

	`va_¨g
(
¨gp
, );

84 
c
*
fmt
++;

86 i‡(
	`isdigô
(
c
)) {

87 
max
= 0;

89 
max
max * 10 + (
c
 - '0');

90 } 
	`isdigô
(
c
*
fmt
++));

95 
x2c

x2c_èb
;

96 
i
= 0;

97 
ba£
= 10;

98 
ötsize

INT
;

99 i‡(
c
 == 'l' || c == 'L') {

101 
ötsize

LONG
;

102 
c
*
fmt
++;

104 i‡(
c
 == 0) ;

106 
c
) {

109 
i

ötsize
 =
LONG
 ? 
	`va_¨g
(
¨gp
, )

110 : 
	`va_¨g
(
¨gp
, );

111 
u

i
 < 0 ? -i : i;

112 
öt2ascii
;

116 
ba£
= 010;

117 
gëöt
;

121 i‡((*Ë> ()Ë
ötsize

LONG
;

125 
x2c

X2C_èb
;

127 
ba£
= 0x10;

128 
gëöt
;

132 
gëöt
:

133 
u

ötsize
 =
LONG
 ? 
	`va_¨g
(
¨gp
, )

134 : 
	`va_¨g
(
¨gp
, );

135 
öt2ascii
:

136 
p

ãmp
 + (temp)-1;

137 *
p
= 0;

139 *--
p

x2c
[(
±rdiff_t
Ë(
u
 % 
ba£
)];

140 } (
u
 /
ba£
) > 0);

141 
°rög_Àngth
;

145 
p

ãmp
;

146 *
p

	`va_¨g
(
¨gp
, );

147 
Àn
= 1;

148 
°rög_¥öt
;

152 
p

ãmp
;

153 *
p
= '%';

154 
Àn
= 1;

155 
°rög_¥öt
;

159 
p

	`va_¨g
(
¨gp
, *);

161 
°rög_Àngth
:

162 
Àn
0; 
p
[Àn] !0 &&Üí < 
max
;Üen++) {}

164 
°rög_¥öt
:

165 
width
 -
Àn
;

166 i‡(
i
 < 0Ë
width
--;

167 i‡(
fûl
 ='0' && 
i
 < 0Ë
	`cou¡_kputc
('-');

168 i‡(
adju°
 =
RIGHT
) {

169 
width
 > 0Ë{ 
	`cou¡_kputc
(
fûl
); width--; }

171 i‡(
fûl
 =' ' && 
i
 < 0Ë
	`cou¡_kputc
('-');

172 
Àn
 > 0Ë{ 
	`cou¡_kputc
((Ë*
p
++);Üen--; }

173 
width
 > 0Ë{ 
	`cou¡_kputc
(
fûl
); width--; }

178 
	`cou¡_kputc
('%');

179 
	`cou¡_kputc
(
c
);

184 
	`kputc
(0);

185 
	`va_íd
(
¨gp
);

186  
ch¨cou¡
;

187 
	}
}

	@/usr/include/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


2 
	#__A_OUT_GNU_H__


	)

4 
	~<bôs/a.out.h
>

6 
	#__GNU_EXEC_MACROS__


	)

8 
	sexec


10 
	ma_öfo
;

11 
	ma_ãxt
;

12 
	ma_d©a
;

13 
	ma_bss
;

14 
	ma_syms
;

15 
	ma_íåy
;

16 
	ma_åsize
;

17 
	ma_drsize
;

20 
	emachöe_ty≥


22 
	mM_OLDSUN2
 = 0,

23 
	mM_68010
 = 1,

24 
	mM_68020
 = 2,

25 
	mM_SPARC
 = 3,

26 
	mM_386
 = 100,

27 
	mM_MIPS1
 = 151,

28 
	mM_MIPS2
 = 152

31 
	#N_MAGIC
(
exec
Ë(”xec).
a_öfo
 & 0xffff)

	)

32 
	#N_MACHTYPE
(
exec
Ë((
machöe_ty≥
)((”xec).
a_öfo
 >> 16Ë& 0xff))

	)

33 
	#N_FLAGS
(
exec
Ë((”xec).
a_öfo
 >> 24Ë& 0xff)

	)

34 
	#N_SET_INFO
(
exec
, 
magic
, 
ty≥
, 
Êags
) \

35 ((
exec
).
a_öfo
 = ((
magic
) & 0xffff) \

36 | ((()(
ty≥
) & 0xff) << 16) \

37 | (((
Êags
Ë& 0xffË<< 24))

	)

38 
	#N_SET_MAGIC
(
exec
, 
magic
) \

39 ((
exec
).
a_öfo
 = (”xec).a_öfÿ& 0xffff0000Ë| ((
magic
Ë& 0xffff))

	)

40 
	#N_SET_MACHTYPE
(
exec
, 
machty≥
) \

41 ((
exec
).
a_öfo
 = \

42 ((
exec
).
a_öfo
&0xff00ffffË| (((()(
machty≥
))&0xffË<< 16))

	)

43 
	#N_SET_FLAGS
(
exec
, 
Êags
) \

44 ((
exec
).
a_öfo
 = \

45 ((
exec
).
a_öfo
&0x00ffffffË| (((
Êags
Ë& 0xffË<< 24))

	)

48 
	#OMAGIC
 0407

	)

50 
	#NMAGIC
 0410

	)

52 
	#ZMAGIC
 0413

	)

55 
	#QMAGIC
 0314

	)

57 
	#CMAGIC
 0421

	)

59 
	#N_TRSIZE
(
a
Ë(◊).
a_åsize
)

	)

60 
	#N_DRSIZE
(
a
Ë(◊).
a_drsize
)

	)

61 
	#N_SYMSIZE
(
a
Ë(◊).
a_syms
)

	)

62 
	#N_BADMAG
(
x
) \

63 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

64 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
 && N_MAGIC(xË!
QMAGIC
)

	)

65 
	#_N_HDROFF
(
x
Ë(1024 -  (
exec
))

	)

66 
	#N_TXTOFF
(
x
) \

67 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
) : \

68 (
	`N_MAGIC
(
x
Ë=
QMAGIC
 ? 0 :  (
exec
)))

	)

69 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

70 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

71 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ 
	`N_TRSIZE
(x))

	)

72 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ 
	`N_DRSIZE
(x))

	)

73 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ 
	`N_SYMSIZE
(x))

	)

76 
	#N_TXTADDR
(
x
Ë(
	`N_MAGIC
(xË=
QMAGIC
 ? 4096 : 0)

	)

79 
	#SEGMENT_SIZE
 1024

	)

81 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

82 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

84 
	#N_DATADDR
(
x
) \

85 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

86 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

87 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

89 #i‡!
deföed
 (
N_NLIST_DECLARED
)

90 
	s∆i°


94 *
	mn_«me
;

95 
∆i°
 *
	mn_√xt
;

96 
	mn_°rx
;

97 } 
	mn_un
;

98 
	mn_ty≥
;

99 
	mn_Ÿhî
;

100 
	mn_desc
;

101 
	mn_vÆue
;

105 
	#N_UNDF
 0

	)

106 
	#N_ABS
 2

	)

107 
	#N_TEXT
 4

	)

108 
	#N_DATA
 6

	)

109 
	#N_BSS
 8

	)

110 
	#N_FN
 15

	)

111 
	#N_EXT
 1

	)

112 
	#N_TYPE
 036

	)

113 
	#N_STAB
 0340

	)

114 
	#N_INDR
 0xa

	)

115 
	#N_SETA
 0x14

	)

116 
	#N_SETT
 0x16

	)

117 
	#N_SETD
 0x18

	)

118 
	#N_SETB
 0x1A

	)

119 
	#N_SETV
 0x1C

	)

121 #i‡!
deföed
 (
N_RELOCATION_INFO_DECLARED
)

127 
	sªloˇti⁄_öfo


129 
	mr_addªss
;

130 
	mr_symbﬁnum
:24;

131 
	mr_p¸ñ
:1;

132 
	mr_Àngth
:2;

133 
	mr_exã∫
:1;

134 
	mr_∑d
:4;

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

676 #ifde‡
__USE_GNU


677 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

680 
__BEGIN_NAMESPACE_STD


683 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

684 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

685 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

689 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

690 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 #ifde‡
__USE_GNU


692 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

693 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

694 
	`__n⁄nuŒ
 ((1, 4));

699 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

700 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__END_NAMESPACE_STD


703 #ifde‡
__USE_ISOC99


704 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

705 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__BEGIN_NAMESPACE_STD


713 
div_t
 
	$div
 (
__numî
, 
__díom
)

714 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

715 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

716 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_ISOC99


720 
__BEGIN_NAMESPACE_C99


721 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

722 
__díom
)

723 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

724 
__END_NAMESPACE_C99


728 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


735 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

736 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

741 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

742 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

747 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

748 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

751 #ifde‡
__USE_MISC


753 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

754 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

755 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

756 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

757 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

758 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

759 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

760 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

765 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

766 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

767 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

769 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

770 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

772 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

773 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

774 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

775 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

777 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

778 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

779 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

784 
__BEGIN_NAMESPACE_STD


787 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

790 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

794 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

798 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

799 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

801 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

802 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

803 
__THROW
;

804 
__END_NAMESPACE_STD


807 #ifde‡
__USE_SVID


812 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

816 #ifde‡
__USE_XOPEN_EXTENDED


823 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

824 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

825 **
__ª°ri˘
 
__vÆuï
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

830 #ifde‡
__USE_XOPEN


832 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 #ifde‡
__USE_XOPEN2K


840 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

843 #ifde‡
__USE_XOPEN


848 
	$gø¡±
 (
__fd
Ë
__THROW
;

852 
	$u∆ock±
 (
__fd
Ë
__THROW
;

857 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_GNU


864 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

865 
__THROW
 
	`__n⁄nuŒ
 ((2));

868 
	`gë±
 ();

871 #ifde‡
__USE_BSD


875 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/°dlib.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/°dlib-ldbl.h
>

889 #unde‡
__√ed_mÆloc_™d_ˇŒoc


891 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

386 #ifde‡
__USE_GNU


389 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

399 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

411 
	`¶ìp
 (
__£c⁄ds
);

413 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


418 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

419 
__THROW
;

426 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

435 
	`∑u£
 ();

439 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

442 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


444 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

449 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

454 #ifde‡
__USE_ATFILE


457 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

458 
__gid_t
 
__group
, 
__Êag
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

463 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

465 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


467 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

477 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

479 #ifdef 
__USE_GNU


483 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

486 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


490 *
	$gëwd
 (*
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

496 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

499 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

501 #ifde‡
__USE_GNU


504 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

508 **
__ívú⁄
;

509 #ifde‡
__USE_GNU


510 **
ívú⁄
;

516 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

517 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


522 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

523 
__THROW
;

528 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

533 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

534 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

539 
__THROW
 
	`__n⁄nuŒ
 ((1));

543 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

544 
__THROW
 
	`__n⁄nuŒ
 ((1));

549 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

550 
__THROW
 
	`__n⁄nuŒ
 ((1));

553 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


555 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

560 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

566 
	~<bôs/c⁄‚ame.h
>

569 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

576 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

578 #ifdef 
__USE_POSIX2


580 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

585 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

588 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

592 #i‚de‡
__FAVOR_BSD


593 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

595 #ifde‡
__REDIRECT_NTH


596 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

598 
	#gëpgΩ
 
__gëpgid


	)

603 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

604 #ifde‡
__USE_XOPEN_EXTENDED


605 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

612 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

614 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


625 #i‚de‡
__FAVOR_BSD


629 
	$£çgΩ
 (Ë
__THROW
;

634 #ifde‡
__REDIRECT_NTH


635 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

637 
	#£çgΩ
 
£çgid


	)

646 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

648 #ifde‡
__USE_XOPEN_EXTENDED


650 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

654 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

657 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

660 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

663 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

668 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

670 #ifdef 
__USE_GNU


672 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

679 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

681 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


684 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

687 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


689 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

696 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

698 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


701 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

704 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


706 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

709 #ifde‡
__USE_GNU


712 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

713 
__THROW
;

717 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

718 
__THROW
;

722 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

723 
__THROW
;

727 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

728 
__THROW
;

735 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

737 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


742 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

748 *
	$ây«me
 (
__fd
Ë
__THROW
;

752 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

753 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

757 
	$ißây
 (
__fd
Ë
__THROW
;

759 #i‡
deföed
 
__USE_BSD
 \

760 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

763 
	$ây¶Ÿ
 (Ë
__THROW
;

768 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

769 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

771 #ifde‡
__USE_ATFILE


774 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

775 
__c⁄°
 *
__to
, 
__Êags
)

776 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

779 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


781 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

782 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

787 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

788 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

789 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


794 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

795 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

798 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

799 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

804 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_ATFILE


808 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

809 
__THROW
 
	`__n⁄nuŒ
 ((2));

813 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

820 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

827 *
	`gëlogö
 ();

828 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


835 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

838 #ifdef 
__USE_BSD


840 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifdef 
__USE_POSIX2


848 
	#__√ed_gë›t


	)

849 
	~<gë›t.h
>

853 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


857 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

864 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

869 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

875 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

877 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

884 
	$vh™gup
 (Ë
__THROW
;

887 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

895 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

896 
size_t
 
__off£t
, 
__sˇÀ
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

907 *
	$gëu£rshñl
 (Ë
__THROW
;

908 
	$ídu£rshñl
 (Ë
__THROW
;

909 
	$£tu£rshñl
 (Ë
__THROW
;

915 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

919 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

922 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

926 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

930 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


935 
	`fsync
 (
__fd
);

939 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


942 
	`gëho°id
 ();

945 
	$sync
 (Ë
__THROW
;

950 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

955 
	$gëdèbÀsize
 (Ë
__THROW
;

959 #i‚de‡
__USE_FILE_OFFSET64


960 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

963 #ifde‡
__REDIRECT_NTH


964 
	`__REDIRECT_NTH
 (
åunˇã
,

965 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

966 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

968 
	#åunˇã
 
åunˇã64


	)

971 #ifde‡
__USE_LARGEFILE64


972 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

978 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


981 #i‚de‡
__USE_FILE_OFFSET64


982 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

984 #ifde‡
__REDIRECT_NTH


985 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

986 
·runˇã64
Ë
__wur
;

988 
	#·runˇã
 
·runˇã64


	)

991 #ifde‡
__USE_LARGEFILE64


992 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

998 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1008 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1012 #ifde‡
__USE_MISC


1023 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1028 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1040 
	#F_ULOCK
 0

	)

1041 
	#F_LOCK
 1

	)

1042 
	#F_TLOCK
 2

	)

1043 
	#F_TEST
 3

	)

1045 #i‚de‡
__USE_FILE_OFFSET64


1046 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1048 #ifde‡
__REDIRECT


1049 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1050 
lockf64
Ë
__wur
;

1052 
	#lockf
 
lockf64


	)

1055 #ifde‡
__USE_LARGEFILE64


1056 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1061 #ifde‡
__USE_GNU


1066 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1067 (
__exãnsi⁄__
 \

1068 ({ 
__ªsu…
; \

1069 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1070 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1071 
__ªsu…
; 
	}
}))

	)

1074 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1077 
fd©async
 (
__fûdes
);

1083 #ifdef 
__USE_XOPEN


1085 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1090 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1097 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1098 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1104 #ifde‡
__USE_XOPEN


1106 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1111 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1112 
	~<bôs/uni°d.h
>

1115 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


5 
	~<bôs/w‹dsize.h
>

7 #i‡
__WORDSIZE
 == 64

11 
	#__NO_A_OUT_SUPPORT
 1

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

513 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

515 
	m_CS_GNU_LIBC_VERSION
,

516 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

517 
	m_CS_GNU_LIBPTHREAD_VERSION
,

518 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

520 
	m_CS_LFS_CFLAGS
 = 1000,

521 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

522 
	m_CS_LFS_LDFLAGS
,

523 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

524 
	m_CS_LFS_LIBS
,

525 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

526 
	m_CS_LFS_LINTFLAGS
,

527 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

528 
	m_CS_LFS64_CFLAGS
,

529 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

530 
	m_CS_LFS64_LDFLAGS
,

531 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

532 
	m_CS_LFS64_LIBS
,

533 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

534 
	m_CS_LFS64_LINTFLAGS
,

535 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

537 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

538 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

539 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

540 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

541 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

542 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

543 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

544 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

545 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

546 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

547 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

548 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

549 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

550 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

551 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

552 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

553 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

554 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

555 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

556 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

557 
	m_CS_XBS5_LP64_OFF64_LIBS
,

558 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

559 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

560 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

561 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

562 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

563 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

564 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

565 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

566 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

567 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

568 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

570 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

571 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

572 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

573 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

574 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

575 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

576 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

577 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

578 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

579 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

580 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

581 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

582 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

583 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

584 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

585 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

586 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

587 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

588 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

589 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

590 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

591 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

592 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

593 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

594 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

595 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

596 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

597 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

598 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

599 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

600 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


601 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	~<bôs/¥edefs.h
>

299 
	#__STDC_ISO_10646__
 200009L

	)

307 #unde‡
__GNU_LIBRARY__


308 
	#__GNU_LIBRARY__
 6

	)

312 
	#__GLIBC__
 2

	)

313 
	#__GLIBC_MINOR__
 9

	)

315 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

316 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

319 #i‡
deföed
 
__GNUC__
 \

320 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

321 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

322 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

323 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

327 #i‚de‡
__ASSEMBLER__


328 #i‚de‡
_SYS_CDEFS_H


329 
	~<sys/cdefs.h
>

334 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


335 
	#__USE_LARGEFILE
 1

	)

336 
	#__USE_LARGEFILE64
 1

	)

342 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

343 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

344 && 
deföed
 
	g__exã∫_ölöe


345 
	#__USE_EXTERN_INLINES
 1

	)

350 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

351 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

352 && 
deföed
 
	g__exã∫_ölöe


353 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

361 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
84
1836
clock.c
config.h
const.h
debug.c
debug.h
glo.h
interrupt.c
ipc.h
kernel.h
main.c
priv.h
proc.c
proc.h
profile.c
profile.h
proto.h
start.c
system.c
system.h
table.c
type.h
utility.c
vm.h
../lib/sysutil/kprintf.c
/usr/include/a.out.h
/usr/include/errno.h
/usr/include/limits.h
/usr/include/signal.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/a.out.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
