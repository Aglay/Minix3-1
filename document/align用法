目前我知道的是，该伪指令可用于调整当前段之后的对齐方式：

常用于.code的第一行，或是位于某个函数内的一段proc中。如下：

1、.code。作用：常用于32位的CPU，主要是为了优化数据的I/O：
.code
align 4
....

2、一段<func> proc... <func> endp内。作用：用于优化存于栈中声明的局部变量，如表：

align 16
@PasswordTable:
....


对齐伪指令格式：

ALIGN Num

其中：Num必须是2的幂，如：2、4、8和16等。

伪指令的作用是：告诉汇编程序，本伪指令下面的内存变量必须从下一个能被Num整除的地址开始分配。

如果下一个地址正好能被Num整除，那么，该伪指令不起作用，否则，汇编程序将空出若干个字节，直到下一个地址能被Num整除为止。

对齐的地址数据CPU读取起来比没用对齐的地址读取更节约CPU效率。
